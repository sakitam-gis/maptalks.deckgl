{"version":3,"sources":["webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/layers/dist/esm/column-layer/column-geometry.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/layers/dist/esm/column-layer/column-layer-vertex.glsl.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/layers/dist/esm/column-layer/column-layer.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/layers/dist/esm/column-layer/column-layer-fragment.glsl.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-hexbin/src/hexbin.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/aggregation-layers/dist/esm/utils/scale-utils.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/aggregation-layers/dist/esm/utils/bin-sorter.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/aggregation-layers/dist/esm/utils/cpu-aggregator.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/aggregation-layers/dist/esm/utils/prop-utils.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/aggregation-layers/dist/esm/aggregation-layer.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-layer.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/aggregation-layers/dist/esm/utils/color-utils.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-aggregator.js","webpack:///./src/pages/hexagon.tsx","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.glsl.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.glsl.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/core/dist/esm/effects/lighting/point-light.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_Geometry","ColumnGeometry","props","undefined","this","_props$id","id","_tesselateColumn","tesselateColumn","indices","attributes","call","radius","_props$height","height","_props$nradial","nradial","vertices","log","assert","vertsAroundEdge","numVertices","stepAngle","Math","PI","Uint16Array","positions","Float32Array","normals","j","a","vertex","nextVertex","sin","cos","k","_j","v","floor","sign","_a","_vertex","_sin","_cos","index","_j2","POSITION","size","value","NORMAL","DEFAULT_COLOR","defaultProps","diskResolution","type","min","angle","offset","coverage","max","elevationScale","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","Number","MAX_SAFE_INTEGER","extruded","wireframe","filled","stroked","getPosition","x","position","getFillColor","getLineColor","getLineWidth","getElevation","material","getColor","deprecatedFor","_Layer","ColumnLayer","prototype","vs","fs","modules","project32","picking","getAttributeManager","addInstanced","instancePositions","fp64","use64bitPositions","transition","accessor","instanceElevations","instanceFillColors","colorFormat","normalized","defaultValue","instanceLineColors","instanceStrokeWidths","_ref","oldProps","changeFlags","regenerateModels","extensionsChanged","gl","context","state","model","setState","_getModel","invalidateAll","_updateGeometry","geometry","meanVertexDistance","p","sqrt","edgeDistance","assign","getShaders","isInstanced","_ref2","getGeometry","fillVertexCount","wireframeVertexCount","setProps","_ref3","uniforms","viewport","_this$props","_this$state","widthMultiplier","metersPerPixel","setUniforms","widthScale","widthMinPixels","widthMaxPixels","isIndexed","setVertexCount","setDrawMode","isStroke","draw","layerName","thirdPi","angles","pointX","d","pointY","getScale","domain","range","scaleFunction","scale","getQuantizeScale","domainRange","warn","step","idx","clampIdx","quantizeScale","getLinearScale","linearScale","getQuantileScale","sortedDomain","sort","ascending","n","thresholds","Array","threshold","lo","hi","mid","bisectRight","thresholdsScale","b","fraction","domainLength","domainFraction","lowIndex","low","getOrdinalScale","domainMap","Map","uniqueDomain","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","concat","has","set","err","get","ordinalScale","notNullOrUndefined","getTruthyValues","data","valueAccessor","map","getQuantileDomain","getOrdinalDomain","values","results","includes","defaultGetValue","points","defaultGetPoints","bin","defaultGetIndex","NaN","getValue","getPoints","getIndex","filterData","BinSorter","bins","aggregatedBins","getAggregatedBins","_updateMinMaxValues","binMap","getBinMap","_props$getValue","_props$getPoints","_props$getIndex","hasFilter","binCount","binIndex","filteredPoints","isFinite","counts","percentileRange","len","sortedBins","_percentileRange$map","_percentileRange$map2","lower","upper","ceil","maxCount","maxValue","minValue","totalCount","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","lowerIdx","upperIdx","isArray","idxRange","_percentileToIndex","_ref2$","_ref2$2","indexEdge","_getScaleDomain","scaleType","_ref4","slice","AGGREGATION_OPERATION","SUM","MEAN","MIN","MAX","sumReducer","accu","cur","maxReducer","minReducer","getValueFunc","aggregation","pts","filtered","reduce","Infinity","getMin","getSum","getMean","getMax","nop","dimensionSteps","_defaultDimensions","pickingInfo","getBins","triggers","prop","updateTrigger","weight","getDomain","lowerPercentile","upperPercentile","getScaleFunc","onSet","nullValue","defaultGetCellSize","cellSize","CPUAggregator","opts","layerData","dimensions","dimensionUpdaters","_getCellSize","getCellSize","_getAggregator","getAggregator","_addDimension","aggregationParams","updateGetValueFuncs","reprojectNeeded","needsReProjectPoints","aggregationDirty","dataChanged","getAggregatedData","getDimensionChanges","f","updateObject","result","hexagons","aggregator","normalizeResult","getSortedBins","_this$dimensionUpdate","needUpdateDimensionStep","setDimensionState","updateTriggersChanged","all","_this","dimension","getDimensionUpdaters","scaleFunc","updater","getDimensionSortedBins","getDimensionValueDomain","getDimensionScale","attributeAccessor","getSubLayerDimensionAttribute","dimensionStep","some","item","_this2","updaters","_loop","needUpdate","find","bind","_this3","_updateTriggers","updateTriggers","_loop2","fromProp","dimensionUpdater","_filterData","_getDomain$triggers","valueDomain","getValueDomainByScale","_getScaleFunc$trigger","dimensionRange","dimensionDomain","getScaleFunctionByScaleType","getScaleFunction","_this4","cell","_this4$state$dimensio","cv","accessors","info","picked","binInfo","Boolean","dimensionKey","hasOwnProperty","filterProps","filterKeys","filteredProps","_CompositeLayer","AggregationLayer","ignoreProps","constructor","_propTypes","shaders","defines","NON_INSTANCED_MODEL","updateShaders","_updateAttributes","changedAttributes","getShaderAttributes","_this$context","mousePosition","create","pickingActive","devicePixelRatio","updateOpts","params","_params$compareAll","compareAll","dataProps","_dimension$accessors","newProps","propTypes","name","obj","isEmpty","isObjectEmpty","stats","colorDomain","colorRange","getColorValue","getColorWeight","colorAggregation","colorScaleType","onSetColorDomain","elevationDomain","elevationRange","getElevationValue","getElevationWeight","elevationAggregation","elevationLowerPercentile","elevationUpperPercentile","elevationScaleType","onSetElevationDomain","hexagonAggregator","centerLngLat","getAccessor","minX","minY","maxX","maxY","y","every","getPointsCenter","radiusCommon","center","unitsPerMeter","getDistanceScales","getRadiusInCommon","screenPoints","_createIterable","iterable","objectInfo","posIndex","screenCoord","projectFlat","r","dx","dy","x0","y0","x1","y1","hexbin","binsById","isNaN","px","point","py","pj","round","pi","py1","abs","px1","pi2","pj2","px2","py2","hexagon","join","centers","mesh","fragment","_","extent","newHexbin","hex","unprojectFlat","optional","_AggregationLayer","HexagonLayer","somethingChanged","cpuAggregator","aggregatorState","hexagonVertices","add","oldVertices","propsOrDataChanged","updateState","getAttributes","convertLatLngToMeterOffset","updateRadiusAngle","vertex0","vertex3","centroid","centroidFlat","metersPerUnit","vt","vtFlat","error","getPickingInfo","getUpdateTriggers","transitions","_this$state2","SubLayerClass","getSubLayerClass","_getSublayerUpdateTriggers","_onGetSublayerColor","_onGetSublayerElevation","getSubLayerProps","ambientLight","AmbientLight","color","intensity","pointLight1","PointLight","pointLight2","lightingEffect","LightingEffect","LIGHT_SETTINGS","lightsPosition","ambientRatio","diffuseRatio","specularRatio","lightsStrength","numberOfLights","ambient","diffuse","shininess","specularColor","Hexagon","onHover","hoveredObject","deckLayer","viewState","zoom","pitch","bearing","startAnimationTimer","intervalTimer","_startAnimate","_animateHeight","initMap","request","response","lng","lat","_animate","componentWillUnmount","remove","renderTooltip","className","style","top","left","count","toFixed","getTooltip","_renderLayers","layers","lightSettings","opacity","pickable","effects","DeckGLLayer","animation","forceRenderOnMoving","forceRenderOnZooming","renderStart","addLayer","_stopAnimate","window","setTimeout","setInterval","clearTimeout","renderState","update","Base","INITIAL_MODULE_OPTIONS","getUniforms","lightSources","pointLights","directionalLights","hasLights","getLightSourceUniforms","lighting_uEnabled","lights","light","MAX_LIGHTS","convertColor","_ref$color","_ref$intensity","component","_ref2$pointLights","_ref2$directionalLigh","lightSourceUniforms","pointLight","attenuation","lighting_uPointLightCount","directionalLight","direction","lighting_uDirectionalLightCount","CompositeLayer","internalState","subLayers","setNeedsUpdate","__source","parent","overridingProps","_subLayerProps","DefaultLayerClass","row","sourceObject","sourceObjectIndex","sublayerProps","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","extensions","overridingSublayerProps","overridingSublayerTriggers","sublayerId","propType","getSubLayerAccessor","extension","passThroughProps","shouldUpdate","needsUpdate","renderLayers","getSubLayers","layer","isLoaded","gouraudLighting","dependencies","LIGHTING_VERTEX","phongLighting","LIGHTING_FRAGMENT","getMaterialUniforms","_material$ambient","_material$diffuse","_material$shininess","_material$specularCol","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","DEFAULT_LIGHT_COLOR","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","_props$color","_props$intensity","_props$position","getAttenuation","projectedLight","_layer$props","fromCoordinateSystem","isGeospatial","LNGLAT","CARTESIAN","fromCoordinateOrigin"],"mappings":"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","file":"component---src-pages-hexagon-tsx-0dbcbce2089c52411eb5.js","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { log } from '@deck.gl/core';\nimport { Geometry, uid } from '@luma.gl/core';\n\nvar ColumnGeometry = function (_Geometry) {\n  _inherits(ColumnGeometry, _Geometry);\n\n  function ColumnGeometry() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ColumnGeometry);\n\n    var _props$id = props.id,\n        id = _props$id === void 0 ? uid('column-geometry') : _props$id;\n\n    var _tesselateColumn = tesselateColumn(props),\n        indices = _tesselateColumn.indices,\n        attributes = _tesselateColumn.attributes;\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ColumnGeometry).call(this, _objectSpread({}, props, {\n      id: id,\n      indices: indices,\n      attributes: attributes\n    })));\n  }\n\n  return ColumnGeometry;\n}(Geometry);\n\nexport { ColumnGeometry as default };\n\nfunction tesselateColumn(props) {\n  var radius = props.radius,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 1 : _props$height,\n      _props$nradial = props.nradial,\n      nradial = _props$nradial === void 0 ? 10 : _props$nradial,\n      vertices = props.vertices;\n  log.assert(!vertices || vertices.length >= nradial);\n  var vertsAroundEdge = nradial + 1;\n  var numVertices = vertsAroundEdge * 3;\n  var stepAngle = Math.PI * 2 / nradial;\n  var indices = new Uint16Array(nradial * 3 * 2);\n  var positions = new Float32Array(numVertices * 3);\n  var normals = new Float32Array(numVertices * 3);\n  var i = 0;\n\n  for (var j = 0; j < vertsAroundEdge; j++) {\n    var a = j * stepAngle;\n    var vertex = vertices && vertices[j % nradial];\n    var nextVertex = vertices && vertices[(j + 1) % nradial];\n    var sin = Math.sin(a);\n    var cos = Math.cos(a);\n\n    for (var k = 0; k < 2; k++) {\n      positions[i + 0] = vertex ? vertex[0] : cos * radius;\n      positions[i + 1] = vertex ? vertex[1] : sin * radius;\n      positions[i + 2] = (1 / 2 - k) * height;\n      normals[i + 0] = vertex ? nextVertex[0] - vertex[0] : cos;\n      normals[i + 1] = vertex ? nextVertex[1] - vertex[1] : sin;\n      i += 3;\n    }\n  }\n\n  for (var _j = 0; _j < vertsAroundEdge; _j++) {\n    var v = Math.floor(_j / 2) * Math.sign(_j % 2 - 0.5);\n\n    var _a = v * stepAngle;\n\n    var _vertex = vertices && vertices[(v + nradial) % nradial];\n\n    var _sin = Math.sin(_a);\n\n    var _cos = Math.cos(_a);\n\n    positions[i + 0] = _vertex ? _vertex[0] : _cos * radius;\n    positions[i + 1] = _vertex ? _vertex[1] : _sin * radius;\n    positions[i + 2] = height / 2;\n    normals[i + 2] = 1;\n    i += 3;\n  }\n\n  var index = 0;\n\n  for (var _j2 = 0; _j2 < nradial; _j2++) {\n    indices[index++] = _j2 * 2 + 0;\n    indices[index++] = _j2 * 2 + 2;\n    indices[index++] = _j2 * 2 + 0;\n    indices[index++] = _j2 * 2 + 1;\n    indices[index++] = _j2 * 2 + 1;\n    indices[index++] = _j2 * 2 + 3;\n  }\n\n  return {\n    indices: indices,\n    attributes: {\n      POSITION: {\n        size: 3,\n        value: positions\n      },\n      NORMAL: {\n        size: 3,\n        value: normals\n      }\n    }\n  };\n}","export default \"\\n#define SHADER_NAME column-layer-vertex-shader\\n\\nattribute vec3 positions;\\nattribute vec3 normals;\\n\\nattribute vec3 instancePositions;\\nattribute float instanceElevations;\\nattribute vec3 instancePositions64Low;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute float instanceStrokeWidths;\\n\\nattribute vec3 instancePickingColors;\\nuniform float opacity;\\nuniform float radius;\\nuniform float angle;\\nuniform vec2 offset;\\nuniform bool extruded;\\nuniform bool isStroke;\\nuniform float coverage;\\nuniform float elevationScale;\\nuniform float edgeDistance;\\nuniform float widthScale;\\nuniform float widthMinPixels;\\nuniform float widthMaxPixels;\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n\\n  vec4 color = isStroke ? instanceLineColors : instanceFillColors;\\n  mat2 rotationMatrix = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\\n  float elevation = 0.0;\\n  float strokeOffsetRatio = 1.0;\\n\\n  if (extruded) {\\n    elevation = instanceElevations * (positions.z + 1.0) / 2.0 * elevationScale;\\n  } else if (isStroke) {\\n    float widthPixels = clamp(project_size_to_pixel(instanceStrokeWidths * widthScale),\\n      widthMinPixels, widthMaxPixels) / 2.0;\\n    strokeOffsetRatio += sign(positions.z) * project_pixel_size(widthPixels) / project_size(edgeDistance * coverage * radius);\\n  }\\n  float shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\\n  float dotRadius = radius * coverage * shouldRender;\\n\\n  geometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\\n  geometry.pickingColor = instancePickingColors;\\n  vec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\\n  vec3 centroidPosition64Low = instancePositions64Low;\\n  vec3 pos = vec3(project_size(rotationMatrix * positions.xy * strokeOffsetRatio + offset) * dotRadius, 0.);\\n  DECKGL_FILTER_SIZE(pos, geometry);\\n\\n  gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  if (extruded && !isStroke) {\\n    vec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\\n    vColor = vec4(lightColor, color.a * opacity);\\n  } else {\\n    vColor = vec4(color.rgb, color.a * opacity);\\n  }\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n}\\n\";","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { Layer, project32, gouraudLighting, picking } from '@deck.gl/core';\nimport { Model } from '@luma.gl/core';\nimport ColumnGeometry from './column-geometry';\nimport vs from './column-layer-vertex.glsl';\nimport fs from './column-layer-fragment.glsl';\nvar DEFAULT_COLOR = [0, 0, 0, 255];\nvar defaultProps = {\n  diskResolution: {\n    type: 'number',\n    min: 4,\n    value: 20\n  },\n  vertices: null,\n  radius: {\n    type: 'number',\n    min: 0,\n    value: 1000\n  },\n  angle: {\n    type: 'number',\n    value: 0\n  },\n  offset: {\n    type: 'array',\n    value: [0, 0]\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  extruded: true,\n  wireframe: false,\n  filled: true,\n  stroked: false,\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  material: true,\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\n\nvar ColumnLayer = function (_Layer) {\n  _inherits(ColumnLayer, _Layer);\n\n  function ColumnLayer() {\n    _classCallCheck(this, ColumnLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ColumnLayer).apply(this, arguments));\n  }\n\n  _createClass(ColumnLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      return _get(_getPrototypeOf(ColumnLayer.prototype), \"getShaders\", this).call(this, {\n        vs: vs,\n        fs: fs,\n        modules: [project32, gouraudLighting, picking]\n      });\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        instancePositions: {\n          size: 3,\n          type: 5130,\n          fp64: this.use64bitPositions(),\n          transition: true,\n          accessor: 'getPosition'\n        },\n        instanceElevations: {\n          size: 1,\n          transition: true,\n          accessor: 'getElevation'\n        },\n        instanceFillColors: {\n          size: this.props.colorFormat.length,\n          type: 5121,\n          normalized: true,\n          transition: true,\n          accessor: 'getFillColor',\n          defaultValue: DEFAULT_COLOR\n        },\n        instanceLineColors: {\n          size: this.props.colorFormat.length,\n          type: 5121,\n          normalized: true,\n          transition: true,\n          accessor: 'getLineColor',\n          defaultValue: DEFAULT_COLOR\n        },\n        instanceStrokeWidths: {\n          size: 1,\n          accessor: 'getLineWidth',\n          transition: true\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var props = _ref.props,\n          oldProps = _ref.oldProps,\n          changeFlags = _ref.changeFlags;\n\n      _get(_getPrototypeOf(ColumnLayer.prototype), \"updateState\", this).call(this, {\n        props: props,\n        oldProps: oldProps,\n        changeFlags: changeFlags\n      });\n\n      var regenerateModels = changeFlags.extensionsChanged;\n\n      if (regenerateModels) {\n        var gl = this.context.gl;\n\n        if (this.state.model) {\n          this.state.model[\"delete\"]();\n        }\n\n        this.setState({\n          model: this._getModel(gl)\n        });\n        this.getAttributeManager().invalidateAll();\n      }\n\n      if (regenerateModels || props.diskResolution !== oldProps.diskResolution || props.vertices !== oldProps.vertices) {\n        this._updateGeometry(props);\n      }\n    }\n  }, {\n    key: \"getGeometry\",\n    value: function getGeometry(diskResolution, vertices) {\n      var geometry = new ColumnGeometry({\n        radius: 1,\n        height: 2,\n        vertices: vertices,\n        nradial: diskResolution\n      });\n      var meanVertexDistance = 0;\n\n      if (vertices) {\n        for (var i = 0; i < diskResolution; i++) {\n          var p = vertices[i];\n          var d = Math.sqrt(p[0] * p[0] + p[1] * p[1]);\n          meanVertexDistance += d / diskResolution;\n        }\n      } else {\n        meanVertexDistance = 1;\n      }\n\n      this.setState({\n        edgeDistance: Math.cos(Math.PI / diskResolution) * meanVertexDistance\n      });\n      return geometry;\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(gl) {\n      return new Model(gl, Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        isInstanced: true\n      }));\n    }\n  }, {\n    key: \"_updateGeometry\",\n    value: function _updateGeometry(_ref2) {\n      var diskResolution = _ref2.diskResolution,\n          vertices = _ref2.vertices;\n      var geometry = this.getGeometry(diskResolution, vertices);\n      this.setState({\n        fillVertexCount: geometry.attributes.POSITION.value.length / 3,\n        wireframeVertexCount: geometry.indices.value.length\n      });\n      this.state.model.setProps({\n        geometry: geometry\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref3) {\n      var uniforms = _ref3.uniforms;\n      var viewport = this.context.viewport;\n      var _this$props = this.props,\n          lineWidthUnits = _this$props.lineWidthUnits,\n          lineWidthScale = _this$props.lineWidthScale,\n          lineWidthMinPixels = _this$props.lineWidthMinPixels,\n          lineWidthMaxPixels = _this$props.lineWidthMaxPixels,\n          elevationScale = _this$props.elevationScale,\n          extruded = _this$props.extruded,\n          filled = _this$props.filled,\n          stroked = _this$props.stroked,\n          wireframe = _this$props.wireframe,\n          offset = _this$props.offset,\n          coverage = _this$props.coverage,\n          radius = _this$props.radius,\n          angle = _this$props.angle;\n      var _this$state = this.state,\n          model = _this$state.model,\n          fillVertexCount = _this$state.fillVertexCount,\n          wireframeVertexCount = _this$state.wireframeVertexCount,\n          edgeDistance = _this$state.edgeDistance;\n      var widthMultiplier = lineWidthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n      model.setUniforms(Object.assign({}, uniforms, {\n        radius: radius,\n        angle: angle / 180 * Math.PI,\n        offset: offset,\n        extruded: extruded,\n        coverage: coverage,\n        elevationScale: elevationScale,\n        edgeDistance: edgeDistance,\n        widthScale: lineWidthScale * widthMultiplier,\n        widthMinPixels: lineWidthMinPixels,\n        widthMaxPixels: lineWidthMaxPixels\n      }));\n\n      if (extruded && wireframe) {\n        model.setProps({\n          isIndexed: true\n        });\n        model.setVertexCount(wireframeVertexCount).setDrawMode(1).setUniforms({\n          isStroke: true\n        }).draw();\n      }\n\n      if (filled) {\n        model.setProps({\n          isIndexed: false\n        });\n        model.setVertexCount(fillVertexCount).setDrawMode(5).setUniforms({\n          isStroke: false\n        }).draw();\n      }\n\n      if (!extruded && stroked) {\n        model.setProps({\n          isIndexed: false\n        });\n        model.setVertexCount(fillVertexCount * 2 / 3).setDrawMode(5).setUniforms({\n          isStroke: true\n        }).draw();\n      }\n    }\n  }]);\n\n  return ColumnLayer;\n}(Layer);\n\nexport { ColumnLayer as default };\nColumnLayer.layerName = 'ColumnLayer';\nColumnLayer.defaultProps = defaultProps;","export default \"#define SHADER_NAME column-layer-fragment-shader\\n\\nprecision highp float;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function () {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {},\n        bins = [],\n        i,\n        n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points)) || isNaN(py = +y.call(null, point, i, points))) continue;\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj,\n          bin = binsById[id];\n      if (bin) bin.push(point);else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0,\n        y0 = 0;\n    return angles.map(function (angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function (radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function () {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n\n    return centers;\n  };\n\n  hexbin.mesh = function () {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function (p) {\n      return \"M\" + p + \"m\" + fragment;\n    }).join(\"\");\n  };\n\n  hexbin.x = function (_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function (_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function (_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function (_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function (_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}","import { log } from '@deck.gl/core';\nexport function getScale(domain, range, scaleFunction) {\n  var scale = scaleFunction;\n\n  scale.domain = function () {\n    return domain;\n  };\n\n  scale.range = function () {\n    return range;\n  };\n\n  return scale;\n}\nexport function getQuantizeScale(domain, range) {\n  var scaleFunction = function scaleFunction(value) {\n    return quantizeScale(domain, range, value);\n  };\n\n  return getScale(domain, range, scaleFunction);\n}\nexport function getLinearScale(domain, range) {\n  var scaleFunction = function scaleFunction(value) {\n    return linearScale(domain, range, value);\n  };\n\n  return getScale(domain, range, scaleFunction);\n}\nexport function getQuantileScale(domain, range) {\n  var sortedDomain = domain.sort(ascending);\n  var i = 0;\n  var n = Math.max(1, range.length);\n  var thresholds = new Array(n - 1);\n\n  while (++i < n) {\n    thresholds[i - 1] = threshold(sortedDomain, i / n);\n  }\n\n  var scaleFunction = function scaleFunction(value) {\n    return thresholdsScale(thresholds, range, value);\n  };\n\n  scaleFunction.thresholds = function () {\n    return thresholds;\n  };\n\n  return getScale(domain, range, scaleFunction);\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction threshold(domain, fraction) {\n  var domainLength = domain.length;\n\n  if (fraction <= 0 || domainLength < 2) {\n    return domain[0];\n  }\n\n  if (fraction >= 1) {\n    return domain[domainLength - 1];\n  }\n\n  var domainFraction = (domainLength - 1) * fraction;\n  var lowIndex = Math.floor(domainFraction);\n  var low = domain[lowIndex];\n  var high = domain[lowIndex + 1];\n  return low + (high - low) * (domainFraction - lowIndex);\n}\n\nfunction bisectRight(a, x) {\n  var lo = 0;\n  var hi = a.length;\n\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (ascending(a[mid], x) > 0) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n\n  return lo;\n}\n\nfunction thresholdsScale(thresholds, range, value) {\n  return range[bisectRight(thresholds, value)];\n}\n\nfunction ordinalScale(domain, domainMap, range, value) {\n  var key = \"\".concat(value);\n  var d = domainMap.get(key);\n\n  if (d === undefined) {\n    d = domain.push(value);\n    domainMap.set(key, d);\n  }\n\n  return range[(d - 1) % range.length];\n}\n\nexport function getOrdinalScale(domain, range) {\n  var domainMap = new Map();\n  var uniqueDomain = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = domain[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var d = _step.value;\n      var key = \"\".concat(d);\n\n      if (!domainMap.has(key)) {\n        domainMap.set(key, uniqueDomain.push(d));\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var scaleFunction = function scaleFunction(value) {\n    return ordinalScale(uniqueDomain, domainMap, range, value);\n  };\n\n  return getScale(domain, range, scaleFunction);\n}\nexport function quantizeScale(domain, range, value) {\n  var domainRange = domain[1] - domain[0];\n\n  if (domainRange <= 0) {\n    log.warn('quantizeScale: invalid domain, returning range[0]')();\n    return range[0];\n  }\n\n  var step = domainRange / range.length;\n  var idx = Math.floor((value - domain[0]) / step);\n  var clampIdx = Math.max(Math.min(idx, range.length - 1), 0);\n  return range[clampIdx];\n}\nexport function linearScale(domain, range, value) {\n  return (value - domain[0]) / (domain[1] - domain[0]) * (range[1] - range[0]) + range[0];\n}\n\nfunction notNullOrUndefined(d) {\n  return d !== undefined && d !== null;\n}\n\nexport function unique(values) {\n  var results = [];\n  values.forEach(function (v) {\n    if (!results.includes(v) && notNullOrUndefined(v)) {\n      results.push(v);\n    }\n  });\n  return results;\n}\n\nfunction getTruthyValues(data, valueAccessor) {\n  var values = typeof valueAccessor === 'function' ? data.map(valueAccessor) : data;\n  return values.filter(notNullOrUndefined);\n}\n\nexport function getLinearDomain(data, valueAccessor) {\n  var sorted = getTruthyValues(data, valueAccessor).sort();\n  return sorted.length ? [sorted[0], sorted[sorted.length - 1]] : [0, 0];\n}\nexport function getQuantileDomain(data, valueAccessor) {\n  return getTruthyValues(data, valueAccessor);\n}\nexport function getOrdinalDomain(data, valueAccessor) {\n  return unique(getTruthyValues(data, valueAccessor));\n}\nexport function getScaleDomain(scaleType, data, valueAccessor) {\n  switch (scaleType) {\n    case 'quantize':\n    case 'linear':\n      return getLinearDomain(data, valueAccessor);\n\n    case 'quantile':\n      return getQuantileDomain(data, valueAccessor);\n\n    case 'ordinal':\n      return getOrdinalDomain(data, valueAccessor);\n\n    default:\n      return getLinearDomain(data, valueAccessor);\n  }\n}\nexport function clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nexport function getScaleFunctionByScaleType(scaleType) {\n  switch (scaleType) {\n    case 'quantize':\n      return getQuantizeScale;\n\n    case 'linear':\n      return getLinearScale;\n\n    case 'quantile':\n      return getQuantileScale;\n\n    case 'ordinal':\n      return getOrdinalScale;\n\n    default:\n      return getQuantizeScale;\n  }\n}","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar defaultGetValue = function defaultGetValue(points) {\n  return points.length;\n};\n\nimport { clamp, getQuantileDomain, getOrdinalDomain } from './scale-utils';\nvar MAX_32_BIT_FLOAT = 3.402823466e38;\n\nvar defaultGetPoints = function defaultGetPoints(bin) {\n  return bin.points;\n};\n\nvar defaultGetIndex = function defaultGetIndex(bin) {\n  return bin.index;\n};\n\nvar ascending = function ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar defaultProps = {\n  getValue: defaultGetValue,\n  getPoints: defaultGetPoints,\n  getIndex: defaultGetIndex,\n  filterData: null\n};\n\nvar BinSorter = function () {\n  function BinSorter() {\n    var bins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultProps;\n\n    _classCallCheck(this, BinSorter);\n\n    this.aggregatedBins = this.getAggregatedBins(bins, props);\n\n    this._updateMinMaxValues();\n\n    this.binMap = this.getBinMap();\n  }\n\n  _createClass(BinSorter, [{\n    key: \"getAggregatedBins\",\n    value: function getAggregatedBins(bins, props) {\n      var _props$getValue = props.getValue,\n          getValue = _props$getValue === void 0 ? defaultGetValue : _props$getValue,\n          _props$getPoints = props.getPoints,\n          getPoints = _props$getPoints === void 0 ? defaultGetPoints : _props$getPoints,\n          _props$getIndex = props.getIndex,\n          getIndex = _props$getIndex === void 0 ? defaultGetIndex : _props$getIndex,\n          filterData = props.filterData;\n      var hasFilter = typeof filterData === 'function';\n      var binCount = bins.length;\n      var aggregatedBins = [];\n      var index = 0;\n\n      for (var binIndex = 0; binIndex < binCount; binIndex++) {\n        var bin = bins[binIndex];\n        var points = getPoints(bin);\n        var i = getIndex(bin);\n        var filteredPoints = hasFilter ? points.filter(filterData) : points;\n        bin.filteredPoints = hasFilter ? filteredPoints : null;\n        var value = filteredPoints.length ? getValue(filteredPoints) : null;\n\n        if (value !== null && value !== undefined) {\n          aggregatedBins[index] = {\n            i: Number.isFinite(i) ? i : binIndex,\n            value: value,\n            counts: filteredPoints.length\n          };\n          index++;\n        }\n      }\n\n      return aggregatedBins;\n    }\n  }, {\n    key: \"_percentileToIndex\",\n    value: function _percentileToIndex(percentileRange) {\n      var len = this.sortedBins.length;\n\n      if (len < 2) {\n        return [0, 0];\n      }\n\n      var _percentileRange$map = percentileRange.map(function (n) {\n        return clamp(n, 0, 100);\n      }),\n          _percentileRange$map2 = _slicedToArray(_percentileRange$map, 2),\n          lower = _percentileRange$map2[0],\n          upper = _percentileRange$map2[1];\n\n      var lowerIdx = Math.ceil(lower / 100 * (len - 1));\n      var upperIdx = Math.floor(upper / 100 * (len - 1));\n      return [lowerIdx, upperIdx];\n    }\n  }, {\n    key: \"getBinMap\",\n    value: function getBinMap() {\n      var binMap = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.aggregatedBins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var bin = _step.value;\n          binMap[bin.i] = bin;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return binMap;\n    }\n  }, {\n    key: \"_updateMinMaxValues\",\n    value: function _updateMinMaxValues() {\n      var maxCount = 0;\n      var maxValue = 0;\n      var minValue = MAX_32_BIT_FLOAT;\n      var totalCount = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.aggregatedBins[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var x = _step2.value;\n          maxCount = maxCount > x.counts ? maxCount : x.counts;\n          maxValue = maxValue > x.value ? maxValue : x.value;\n          minValue = minValue < x.value ? minValue : x.value;\n          totalCount += x.counts;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.maxCount = maxCount;\n      this.maxValue = maxValue;\n      this.minValue = minValue;\n      this.totalCount = totalCount;\n    }\n  }, {\n    key: \"getValueRange\",\n    value: function getValueRange(percentileRange) {\n      if (!this.sortedBins) {\n        this.sortedBins = this.aggregatedBins.sort(function (a, b) {\n          return ascending(a.value, b.value);\n        });\n      }\n\n      if (!this.sortedBins.length) {\n        return [];\n      }\n\n      var lowerIdx = 0;\n      var upperIdx = this.sortedBins.length - 1;\n\n      if (Array.isArray(percentileRange)) {\n        var idxRange = this._percentileToIndex(percentileRange);\n\n        lowerIdx = idxRange[0];\n        upperIdx = idxRange[1];\n      }\n\n      return [this.sortedBins[lowerIdx].value, this.sortedBins[upperIdx].value];\n    }\n  }, {\n    key: \"getValueDomainByScale\",\n    value: function getValueDomainByScale(scale) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [],\n          _ref2 = _slicedToArray(_ref, 2),\n          _ref2$ = _ref2[0],\n          lower = _ref2$ === void 0 ? 0 : _ref2$,\n          _ref2$2 = _ref2[1],\n          upper = _ref2$2 === void 0 ? 100 : _ref2$2;\n\n      if (!this.sortedBins) {\n        this.sortedBins = this.aggregatedBins.sort(function (a, b) {\n          return ascending(a.value, b.value);\n        });\n      }\n\n      if (!this.sortedBins.length) {\n        return [];\n      }\n\n      var indexEdge = this._percentileToIndex([lower, upper]);\n\n      return this._getScaleDomain(scale, indexEdge);\n    }\n  }, {\n    key: \"_getScaleDomain\",\n    value: function _getScaleDomain(scaleType, _ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          lowerIdx = _ref4[0],\n          upperIdx = _ref4[1];\n\n      var bins = this.sortedBins;\n\n      switch (scaleType) {\n        case 'quantize':\n        case 'linear':\n          return [bins[lowerIdx].value, bins[upperIdx].value];\n\n        case 'quantile':\n          return getQuantileDomain(bins.slice(lowerIdx, upperIdx + 1), function (d) {\n            return d.value;\n          });\n\n        case 'ordinal':\n          return getOrdinalDomain(bins, function (d) {\n            return d.value;\n          });\n\n        default:\n          return [bins[lowerIdx].value, bins[upperIdx].value];\n      }\n    }\n  }]);\n\n  return BinSorter;\n}();\n\nexport { BinSorter as default };","export var AGGREGATION_OPERATION = {\n  SUM: 1,\n  MEAN: 2,\n  MIN: 3,\n  MAX: 4\n};\n\nfunction sumReducer(accu, cur) {\n  return accu + cur;\n}\n\nfunction maxReducer(accu, cur) {\n  return cur > accu ? cur : accu;\n}\n\nfunction minReducer(accu, cur) {\n  return cur < accu ? cur : accu;\n}\n\nexport function getMean(pts, accessor) {\n  var filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(sumReducer, 0) / filtered.length : null;\n}\nexport function getSum(pts, accessor) {\n  var filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(sumReducer, 0) : null;\n}\nexport function getMax(pts, accessor) {\n  var filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(maxReducer, -Infinity) : null;\n}\nexport function getMin(pts, accessor) {\n  var filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(minReducer, Infinity) : null;\n}\nexport function getValueFunc(aggregation, accessor) {\n  var op = AGGREGATION_OPERATION[aggregation] || AGGREGATION_OPERATION.SUM;\n\n  switch (op) {\n    case AGGREGATION_OPERATION.MIN:\n      return function (pts) {\n        return getMin(pts, accessor);\n      };\n\n    case AGGREGATION_OPERATION.SUM:\n      return function (pts) {\n        return getSum(pts, accessor);\n      };\n\n    case AGGREGATION_OPERATION.MEAN:\n      return function (pts) {\n        return getMean(pts, accessor);\n      };\n\n    case AGGREGATION_OPERATION.MAX:\n      return function (pts) {\n        return getMax(pts, accessor);\n      };\n\n    default:\n      return null;\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport BinSorter from './bin-sorter';\nimport { getScaleFunctionByScaleType } from './scale-utils';\nimport { getValueFunc } from './aggregation-operation-utils';\n\nfunction nop() {}\n\nvar dimensionSteps = ['getBins', 'getDomain', 'getScaleFunc'];\nvar _defaultDimensions = [{\n  key: 'fillColor',\n  accessor: 'getFillColor',\n  pickingInfo: 'colorValue',\n  getBins: {\n    triggers: {\n      value: {\n        prop: 'getColorValue',\n        updateTrigger: 'getColorValue'\n      },\n      weight: {\n        prop: 'getColorWeight',\n        updateTrigger: 'getColorWeight'\n      },\n      aggregation: {\n        prop: 'colorAggregation'\n      },\n      filterData: {\n        prop: '_filterData',\n        updateTrigger: '_filterData'\n      }\n    }\n  },\n  getDomain: {\n    triggers: {\n      lowerPercentile: {\n        prop: 'lowerPercentile'\n      },\n      upperPercentile: {\n        prop: 'upperPercentile'\n      },\n      scaleType: {\n        prop: 'colorScaleType'\n      }\n    }\n  },\n  getScaleFunc: {\n    triggers: {\n      domain: {\n        prop: 'colorDomain'\n      },\n      range: {\n        prop: 'colorRange'\n      }\n    },\n    onSet: {\n      props: 'onSetColorDomain'\n    }\n  },\n  nullValue: [0, 0, 0, 0]\n}, {\n  key: 'elevation',\n  accessor: 'getElevation',\n  pickingInfo: 'elevationValue',\n  getBins: {\n    triggers: {\n      value: {\n        prop: 'getElevationValue',\n        updateTrigger: 'getElevationValue'\n      },\n      weight: {\n        prop: 'getElevationWeight',\n        updateTrigger: 'getElevationWeight'\n      },\n      aggregation: {\n        prop: 'elevationAggregation'\n      },\n      filterData: {\n        prop: '_filterData',\n        updateTrigger: '_filterData'\n      }\n    }\n  },\n  getDomain: {\n    triggers: {\n      lowerPercentile: {\n        prop: 'elevationLowerPercentile'\n      },\n      upperPercentile: {\n        prop: 'elevationUpperPercentile'\n      },\n      scaleType: {\n        prop: 'elevationScaleType'\n      }\n    }\n  },\n  getScaleFunc: {\n    triggers: {\n      domain: {\n        prop: 'elevationDomain'\n      },\n      range: {\n        prop: 'elevationRange'\n      }\n    },\n    onSet: {\n      props: 'onSetElevationDomain'\n    }\n  },\n  nullValue: -1\n}];\n\nvar defaultGetCellSize = function defaultGetCellSize(props) {\n  return props.cellSize;\n};\n\nvar CPUAggregator = function () {\n  function CPUAggregator(opts) {\n    _classCallCheck(this, CPUAggregator);\n\n    this.state = {\n      layerData: {},\n      dimensions: {}\n    };\n    this.changeFlags = {};\n    this.dimensionUpdaters = {};\n    this._getCellSize = opts.getCellSize || defaultGetCellSize;\n    this._getAggregator = opts.getAggregator;\n\n    this._addDimension(opts.dimensions || _defaultDimensions);\n  }\n\n  _createClass(CPUAggregator, [{\n    key: \"updateState\",\n    value: function updateState(opts, aggregationParams) {\n      var oldProps = opts.oldProps,\n          props = opts.props,\n          changeFlags = opts.changeFlags;\n      this.updateGetValueFuncs(oldProps, props, changeFlags);\n      var reprojectNeeded = this.needsReProjectPoints(oldProps, props, changeFlags);\n      var aggregationDirty = false;\n\n      if (changeFlags.dataChanged || reprojectNeeded) {\n        this.getAggregatedData(props, aggregationParams);\n        aggregationDirty = true;\n      } else {\n        var dimensionChanges = this.getDimensionChanges(oldProps, props, changeFlags) || [];\n        dimensionChanges.forEach(function (f) {\n          return typeof f === 'function' && f();\n        });\n        aggregationDirty = true;\n      }\n\n      this.setState({\n        aggregationDirty: aggregationDirty\n      });\n      return this.state;\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(updateObject) {\n      this.state = Object.assign({}, this.state, updateObject);\n    }\n  }, {\n    key: \"setDimensionState\",\n    value: function setDimensionState(key, updateObject) {\n      this.setState({\n        dimensions: Object.assign({}, this.state.dimensions, _defineProperty({}, key, Object.assign({}, this.state.dimensions[key], updateObject)))\n      });\n    }\n  }, {\n    key: \"normalizeResult\",\n    value: function normalizeResult() {\n      var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (result.hexagons) {\n        return Object.assign({\n          data: result.hexagons\n        }, result);\n      } else if (result.layerData) {\n        return Object.assign({\n          data: result.layerData\n        }, result);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getAggregatedData\",\n    value: function getAggregatedData(props, aggregationParams) {\n      var aggregator = this._getAggregator(props);\n\n      var result = aggregator(props, aggregationParams);\n      this.setState({\n        layerData: this.normalizeResult(result)\n      });\n      this.changeFlags = {\n        layerData: true\n      };\n      this.getSortedBins(props);\n    }\n  }, {\n    key: \"updateGetValueFuncs\",\n    value: function updateGetValueFuncs(oldProps, props, changeFlags) {\n      for (var key in this.dimensionUpdaters) {\n        var _this$dimensionUpdate = this.dimensionUpdaters[key].getBins.triggers,\n            value = _this$dimensionUpdate.value,\n            weight = _this$dimensionUpdate.weight,\n            aggregation = _this$dimensionUpdate.aggregation;\n        var getValue = props[value.prop];\n        var getValueChanged = this.needUpdateDimensionStep(this.dimensionUpdaters[key].getBins, oldProps, props, changeFlags);\n\n        if (getValueChanged && getValue === null) {\n          getValue = getValueFunc(props[aggregation.prop], props[weight.prop]);\n        }\n\n        if (getValue) {\n          this.setDimensionState(key, {\n            getValue: getValue\n          });\n        }\n      }\n    }\n  }, {\n    key: \"needsReProjectPoints\",\n    value: function needsReProjectPoints(oldProps, props, changeFlags) {\n      return this._getCellSize(oldProps) !== this._getCellSize(props) || this._getAggregator(oldProps) !== this._getAggregator(props) || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPosition);\n    }\n  }, {\n    key: \"addDimension\",\n    value: function addDimension(dimensions) {\n      this._addDimension(dimensions);\n    }\n  }, {\n    key: \"_addDimension\",\n    value: function _addDimension() {\n      var _this = this;\n\n      var dimensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      dimensions.forEach(function (dimension) {\n        var key = dimension.key;\n        _this.dimensionUpdaters[key] = _this.getDimensionUpdaters(dimension);\n        _this.state.dimensions[key] = {\n          getValue: null,\n          domain: null,\n          sortedBins: null,\n          scaleFunc: nop\n        };\n      });\n    }\n  }, {\n    key: \"getDimensionUpdaters\",\n    value: function getDimensionUpdaters(_ref) {\n      var key = _ref.key,\n          accessor = _ref.accessor,\n          pickingInfo = _ref.pickingInfo,\n          getBins = _ref.getBins,\n          getDomain = _ref.getDomain,\n          getScaleFunc = _ref.getScaleFunc,\n          nullValue = _ref.nullValue;\n      return {\n        key: key,\n        accessor: accessor,\n        pickingInfo: pickingInfo,\n        getBins: Object.assign({\n          updater: this.getDimensionSortedBins\n        }, getBins),\n        getDomain: Object.assign({\n          updater: this.getDimensionValueDomain\n        }, getDomain),\n        getScaleFunc: Object.assign({\n          updater: this.getDimensionScale\n        }, getScaleFunc),\n        attributeAccessor: this.getSubLayerDimensionAttribute(key, nullValue)\n      };\n    }\n  }, {\n    key: \"needUpdateDimensionStep\",\n    value: function needUpdateDimensionStep(dimensionStep, oldProps, props, changeFlags) {\n      return Object.values(dimensionStep.triggers).some(function (item) {\n        if (item.updateTrigger) {\n          return changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged[item.updateTrigger]);\n        }\n\n        return oldProps[item.prop] !== props[item.prop];\n      });\n    }\n  }, {\n    key: \"getDimensionChanges\",\n    value: function getDimensionChanges(oldProps, props, changeFlags) {\n      var _this2 = this;\n\n      var updaters = [];\n\n      var _loop = function _loop(key) {\n        var needUpdate = dimensionSteps.find(function (step) {\n          return _this2.needUpdateDimensionStep(_this2.dimensionUpdaters[key][step], oldProps, props, changeFlags);\n        });\n\n        if (needUpdate) {\n          updaters.push(_this2.dimensionUpdaters[key][needUpdate].updater.bind(_this2, props, _this2.dimensionUpdaters[key]));\n        }\n      };\n\n      for (var key in this.dimensionUpdaters) {\n        _loop(key);\n      }\n\n      return updaters.length ? updaters : null;\n    }\n  }, {\n    key: \"getUpdateTriggers\",\n    value: function getUpdateTriggers(props) {\n      var _this3 = this;\n\n      var _updateTriggers = props.updateTriggers || {};\n\n      var updateTriggers = {};\n\n      var _loop2 = function _loop2(key) {\n        var accessor = _this3.dimensionUpdaters[key].accessor;\n        updateTriggers[accessor] = {};\n        dimensionSteps.forEach(function (step) {\n          Object.values(_this3.dimensionUpdaters[key][step].triggers).forEach(function (_ref2) {\n            var prop = _ref2.prop,\n                updateTrigger = _ref2.updateTrigger;\n\n            if (updateTrigger) {\n              var fromProp = _updateTriggers[updateTrigger];\n\n              if (_typeof(fromProp) === 'object' && !Array.isArray(fromProp)) {\n                Object.assign(updateTriggers[accessor], fromProp);\n              } else if (fromProp !== undefined) {\n                updateTriggers[accessor][prop] = fromProp;\n              }\n            } else {\n              updateTriggers[accessor][prop] = props[prop];\n            }\n          });\n        });\n      };\n\n      for (var key in this.dimensionUpdaters) {\n        _loop2(key);\n      }\n\n      return updateTriggers;\n    }\n  }, {\n    key: \"getSortedBins\",\n    value: function getSortedBins(props) {\n      for (var key in this.dimensionUpdaters) {\n        this.getDimensionSortedBins(props, this.dimensionUpdaters[key]);\n      }\n    }\n  }, {\n    key: \"getDimensionSortedBins\",\n    value: function getDimensionSortedBins(props, dimensionUpdater) {\n      var key = dimensionUpdater.key;\n      var getValue = this.state.dimensions[key].getValue;\n      var sortedBins = new BinSorter(this.state.layerData.data || [], {\n        getValue: getValue,\n        filterData: props._filterData\n      });\n      this.setDimensionState(key, {\n        sortedBins: sortedBins\n      });\n      this.getDimensionValueDomain(props, dimensionUpdater);\n    }\n  }, {\n    key: \"getDimensionValueDomain\",\n    value: function getDimensionValueDomain(props, dimensionUpdater) {\n      var getDomain = dimensionUpdater.getDomain,\n          key = dimensionUpdater.key;\n      var _getDomain$triggers = getDomain.triggers,\n          lowerPercentile = _getDomain$triggers.lowerPercentile,\n          upperPercentile = _getDomain$triggers.upperPercentile,\n          scaleType = _getDomain$triggers.scaleType;\n      var valueDomain = this.state.dimensions[key].sortedBins.getValueDomainByScale(props[scaleType.prop], [props[lowerPercentile.prop], props[upperPercentile.prop]]);\n      this.setDimensionState(key, {\n        valueDomain: valueDomain\n      });\n      this.getDimensionScale(props, dimensionUpdater);\n    }\n  }, {\n    key: \"getDimensionScale\",\n    value: function getDimensionScale(props, dimensionUpdater) {\n      var key = dimensionUpdater.key,\n          getScaleFunc = dimensionUpdater.getScaleFunc,\n          getDomain = dimensionUpdater.getDomain;\n      var _getScaleFunc$trigger = getScaleFunc.triggers,\n          domain = _getScaleFunc$trigger.domain,\n          range = _getScaleFunc$trigger.range;\n      var scaleType = getDomain.triggers.scaleType;\n      var onSet = getScaleFunc.onSet;\n      var dimensionRange = props[range.prop];\n      var dimensionDomain = props[domain.prop] || this.state.dimensions[key].valueDomain;\n      var getScaleFunction = getScaleFunctionByScaleType(scaleType && props[scaleType.prop]);\n      var scaleFunc = getScaleFunction(dimensionDomain, dimensionRange);\n\n      if (_typeof(onSet) === 'object' && typeof props[onSet.props] === 'function') {\n        props[onSet.props](scaleFunc.domain());\n      }\n\n      this.setDimensionState(key, {\n        scaleFunc: scaleFunc\n      });\n    }\n  }, {\n    key: \"getSubLayerDimensionAttribute\",\n    value: function getSubLayerDimensionAttribute(key, nullValue) {\n      var _this4 = this;\n\n      return function (cell) {\n        var _this4$state$dimensio = _this4.state.dimensions[key],\n            sortedBins = _this4$state$dimensio.sortedBins,\n            scaleFunc = _this4$state$dimensio.scaleFunc;\n        var bin = sortedBins.binMap[cell.index];\n\n        if (bin && bin.counts === 0) {\n          return nullValue;\n        }\n\n        var cv = bin && bin.value;\n        var domain = scaleFunc.domain();\n        var isValueInDomain = cv >= domain[0] && cv <= domain[domain.length - 1];\n        return isValueInDomain ? scaleFunc(cv) : nullValue;\n      };\n    }\n  }, {\n    key: \"getSubLayerAccessors\",\n    value: function getSubLayerAccessors(props) {\n      var accessors = {};\n\n      for (var key in this.dimensionUpdaters) {\n        var accessor = this.dimensionUpdaters[key].accessor;\n        accessors[accessor] = this.getSubLayerDimensionAttribute(props, key);\n      }\n\n      return accessors;\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref3) {\n      var info = _ref3.info;\n      var isPicked = info.picked && info.index > -1;\n      var object = null;\n\n      if (isPicked) {\n        var cell = this.state.layerData.data[info.index];\n        var binInfo = {};\n\n        for (var key in this.dimensionUpdaters) {\n          var pickingInfo = this.dimensionUpdaters[key].pickingInfo;\n          var sortedBins = this.state.dimensions[key].sortedBins;\n          var value = sortedBins.binMap[cell.index] && sortedBins.binMap[cell.index].value;\n          binInfo[pickingInfo] = value;\n        }\n\n        object = Object.assign(binInfo, cell, {\n          points: cell.filteredPoints || cell.points\n        });\n      }\n\n      return Object.assign(info, {\n        picked: Boolean(object),\n        object: object\n      });\n    }\n  }, {\n    key: \"getAccessor\",\n    value: function getAccessor(dimensionKey) {\n      if (!this.dimensionUpdaters.hasOwnProperty(dimensionKey)) {\n        return nop;\n      }\n\n      return this.dimensionUpdaters[dimensionKey].attributeAccessor;\n    }\n  }], [{\n    key: \"defaultDimensions\",\n    value: function defaultDimensions() {\n      return _defaultDimensions;\n    }\n  }]);\n\n  return CPUAggregator;\n}();\n\nexport { CPUAggregator as default };","export function filterProps(props, filterKeys) {\n  var filteredProps = {};\n\n  for (var key in props) {\n    if (!filterKeys.includes(key)) {\n      filteredProps[key] = props[key];\n    }\n  }\n\n  return filteredProps;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { CompositeLayer, AttributeManager, _compareProps as compareProps } from '@deck.gl/core';\nimport { cssToDeviceRatio } from '@luma.gl/core';\nimport { filterProps } from './utils/prop-utils';\n\nvar AggregationLayer = function (_CompositeLayer) {\n  _inherits(AggregationLayer, _CompositeLayer);\n\n  function AggregationLayer() {\n    _classCallCheck(this, AggregationLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AggregationLayer).apply(this, arguments));\n  }\n\n  _createClass(AggregationLayer, [{\n    key: \"initializeState\",\n    value: function initializeState(dimensions) {\n      _get(_getPrototypeOf(AggregationLayer.prototype), \"initializeState\", this).call(this);\n\n      this.setState({\n        ignoreProps: filterProps(this.constructor._propTypes, dimensions.data.props),\n        dimensions: dimensions\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(opts) {\n      _get(_getPrototypeOf(AggregationLayer.prototype), \"updateState\", this).call(this, opts);\n\n      var changeFlags = opts.changeFlags;\n\n      if (changeFlags.extensionsChanged) {\n        var shaders = this.getShaders({});\n\n        if (shaders && shaders.defines) {\n          shaders.defines.NON_INSTANCED_MODEL = 1;\n        }\n\n        this.updateShaders(shaders);\n      }\n\n      this._updateAttributes(opts.props);\n    }\n  }, {\n    key: \"updateAttributes\",\n    value: function updateAttributes(changedAttributes) {\n      this.setState({\n        changedAttributes: changedAttributes\n      });\n    }\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this.getAttributeManager().getShaderAttributes();\n    }\n  }, {\n    key: \"getModuleSettings\",\n    value: function getModuleSettings() {\n      var _this$context = this.context,\n          viewport = _this$context.viewport,\n          mousePosition = _this$context.mousePosition,\n          gl = _this$context.gl;\n      var moduleSettings = Object.assign(Object.create(this.props), {\n        viewport: viewport,\n        mousePosition: mousePosition,\n        pickingActive: 0,\n        devicePixelRatio: cssToDeviceRatio(gl)\n      });\n      return moduleSettings;\n    }\n  }, {\n    key: \"updateShaders\",\n    value: function updateShaders(shaders) {}\n  }, {\n    key: \"isAggregationDirty\",\n    value: function isAggregationDirty(updateOpts) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var props = updateOpts.props,\n          oldProps = updateOpts.oldProps,\n          changeFlags = updateOpts.changeFlags;\n      var _params$compareAll = params.compareAll,\n          compareAll = _params$compareAll === void 0 ? false : _params$compareAll,\n          dimension = params.dimension;\n      var ignoreProps = this.state.ignoreProps;\n      var dataProps = dimension.props,\n          _dimension$accessors = dimension.accessors,\n          accessors = _dimension$accessors === void 0 ? [] : _dimension$accessors;\n      var updateTriggersChanged = changeFlags.updateTriggersChanged;\n\n      if (updateTriggersChanged) {\n        if (updateTriggersChanged.all) {\n          return true;\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = accessors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var accessor = _step.value;\n\n            if (updateTriggersChanged[accessor]) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      if (compareAll) {\n        if (changeFlags.extensionsChanged) {\n          return true;\n        }\n\n        return compareProps({\n          oldProps: oldProps,\n          newProps: props,\n          ignoreProps: ignoreProps,\n          propTypes: this.constructor._propTypes\n        });\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = dataProps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var name = _step2.value;\n\n          if (props[name] !== oldProps[name]) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isAttributeChanged\",\n    value: function isAttributeChanged(name) {\n      var changedAttributes = this.state.changedAttributes;\n\n      if (!name) {\n        return !isObjectEmpty(changedAttributes);\n      }\n\n      return changedAttributes && changedAttributes[name] !== undefined;\n    }\n  }, {\n    key: \"_getAttributeManager\",\n    value: function _getAttributeManager() {\n      return new AttributeManager(this.context.gl, {\n        id: this.props.id,\n        stats: this.context.stats\n      });\n    }\n  }]);\n\n  return AggregationLayer;\n}(CompositeLayer);\n\nexport { AggregationLayer as default };\n\nfunction isObjectEmpty(obj) {\n  var isEmpty = true;\n\n  for (var key in obj) {\n    isEmpty = false;\n    break;\n  }\n\n  return isEmpty;\n}\n\nAggregationLayer.layerName = 'AggregationLayer';","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { log } from '@deck.gl/core';\nimport { ColumnLayer } from '@deck.gl/layers';\nimport { defaultColorRange } from '../utils/color-utils';\nimport { pointToHexbin } from './hexagon-aggregator';\nimport CPUAggregator from '../utils/cpu-aggregator';\nimport AggregationLayer from '../aggregation-layer';\n\nfunction nop() {}\n\nvar defaultProps = {\n  colorDomain: null,\n  colorRange: defaultColorRange,\n  getColorValue: {\n    type: 'accessor',\n    value: null\n  },\n  getColorWeight: {\n    type: 'accessor',\n    value: function value(x) {\n      return 1;\n    }\n  },\n  colorAggregation: 'SUM',\n  lowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  upperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  colorScaleType: 'quantize',\n  onSetColorDomain: nop,\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {\n    type: 'accessor',\n    value: null\n  },\n  getElevationWeight: {\n    type: 'accessor',\n    value: function value(x) {\n      return 1;\n    }\n  },\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  elevationUpperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  elevationScaleType: 'linear',\n  onSetElevationDomain: nop,\n  radius: {\n    type: 'number',\n    value: 1000,\n    min: 1\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  extruded: false,\n  hexagonAggregator: pointToHexbin,\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  material: true,\n  _filterData: {\n    type: 'function',\n    value: null,\n    optional: true\n  }\n};\n\nvar HexagonLayer = function (_AggregationLayer) {\n  _inherits(HexagonLayer, _AggregationLayer);\n\n  function HexagonLayer() {\n    _classCallCheck(this, HexagonLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HexagonLayer).apply(this, arguments));\n  }\n\n  _createClass(HexagonLayer, [{\n    key: \"shouldUpdateState\",\n    value: function shouldUpdateState(_ref) {\n      var changeFlags = _ref.changeFlags;\n      return changeFlags.somethingChanged;\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var cpuAggregator = new CPUAggregator({\n        getAggregator: function getAggregator(props) {\n          return props.hexagonAggregator;\n        },\n        getCellSize: function getCellSize(props) {\n          return props.radius;\n        }\n      });\n      this.state = {\n        cpuAggregator: cpuAggregator,\n        aggregatorState: cpuAggregator.state,\n        hexagonVertices: null\n      };\n      var attributeManager = this.getAttributeManager();\n      attributeManager.add({\n        positions: {\n          size: 3,\n          accessor: 'getPosition'\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(opts) {\n      _get(_getPrototypeOf(HexagonLayer.prototype), \"updateState\", this).call(this, opts);\n\n      var _this$state = this.state,\n          cpuAggregator = _this$state.cpuAggregator,\n          oldVertices = _this$state.hexagonVertices;\n\n      if (opts.changeFlags.propsOrDataChanged) {\n        this.setState({\n          aggregatorState: cpuAggregator.updateState(opts, {\n            viewport: this.context.viewport,\n            attributes: this.getAttributes()\n          })\n        });\n      }\n\n      var _ref2 = cpuAggregator.state.layerData || {},\n          hexagonVertices = _ref2.hexagonVertices;\n\n      if (hexagonVertices && oldVertices !== hexagonVertices) {\n        var vertices = this.convertLatLngToMeterOffset(hexagonVertices);\n\n        if (vertices) {\n          this.setState({\n            hexagonVertices: hexagonVertices,\n            vertices: vertices\n          });\n        }\n      } else {\n        this.updateRadiusAngle();\n      }\n    }\n  }, {\n    key: \"updateRadiusAngle\",\n    value: function updateRadiusAngle(vertices) {\n      var viewport = this.context.viewport;\n\n      var _viewport$getDistance = viewport.getDistanceScales(),\n          unitsPerMeter = _viewport$getDistance.unitsPerMeter;\n\n      var cpuAggregator = this.state.cpuAggregator;\n\n      if (cpuAggregator.state.layerData && cpuAggregator.state.layerData.radiusCommon) {\n        var radiusCommon = cpuAggregator.state.layerData.radiusCommon;\n        var radius = radiusCommon / unitsPerMeter[0];\n        this.setState({\n          angle: 90,\n          radius: radius\n        });\n      }\n    }\n  }, {\n    key: \"convertLatLngToMeterOffset\",\n    value: function convertLatLngToMeterOffset(hexagonVertices) {\n      var viewport = this.context.viewport;\n\n      if (Array.isArray(hexagonVertices) && hexagonVertices.length === 6) {\n        var vertex0 = hexagonVertices[0];\n        var vertex3 = hexagonVertices[3];\n        var centroid = [(vertex0[0] + vertex3[0]) / 2, (vertex0[1] + vertex3[1]) / 2];\n        var centroidFlat = viewport.projectFlat(centroid);\n\n        var _viewport$getDistance2 = viewport.getDistanceScales(centroid),\n            metersPerUnit = _viewport$getDistance2.metersPerUnit;\n\n        var vertices = hexagonVertices.map(function (vt) {\n          var vtFlat = viewport.projectFlat(vt);\n          return [(vtFlat[0] - centroidFlat[0]) * metersPerUnit[0], (vtFlat[1] - centroidFlat[1]) * metersPerUnit[1]];\n        });\n        return vertices;\n      }\n\n      log.error('HexagonLayer: hexagonVertices needs to be an array of 6 points')();\n      return null;\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref3) {\n      var info = _ref3.info;\n      return this.state.cpuAggregator.getPickingInfo({\n        info: info\n      });\n    }\n  }, {\n    key: \"_onGetSublayerColor\",\n    value: function _onGetSublayerColor(cell) {\n      return this.state.cpuAggregator.getAccessor('fillColor')(cell);\n    }\n  }, {\n    key: \"_onGetSublayerElevation\",\n    value: function _onGetSublayerElevation(cell) {\n      return this.state.cpuAggregator.getAccessor('elevation')(cell);\n    }\n  }, {\n    key: \"_getSublayerUpdateTriggers\",\n    value: function _getSublayerUpdateTriggers() {\n      return this.state.cpuAggregator.getUpdateTriggers(this.props);\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$props = this.props,\n          elevationScale = _this$props.elevationScale,\n          extruded = _this$props.extruded,\n          coverage = _this$props.coverage,\n          material = _this$props.material,\n          transitions = _this$props.transitions;\n      var _this$state2 = this.state,\n          angle = _this$state2.angle,\n          radius = _this$state2.radius,\n          cpuAggregator = _this$state2.cpuAggregator,\n          vertices = _this$state2.vertices;\n      var SubLayerClass = this.getSubLayerClass('hexagon-cell', ColumnLayer);\n\n      var updateTriggers = this._getSublayerUpdateTriggers();\n\n      var geometry = vertices && vertices.length ? {\n        vertices: vertices,\n        radius: 1\n      } : {\n        radius: radius,\n        angle: angle\n      };\n      return new SubLayerClass(_objectSpread({}, geometry, {\n        diskResolution: 6,\n        elevationScale: elevationScale,\n        extruded: extruded,\n        coverage: coverage,\n        material: material,\n        getFillColor: this._onGetSublayerColor.bind(this),\n        getElevation: this._onGetSublayerElevation.bind(this),\n        transitions: transitions && {\n          getFillColor: transitions.getColorValue || transitions.getColorWeight,\n          getElevation: transitions.getElevationValue || transitions.getElevationWeight\n        }\n      }), this.getSubLayerProps({\n        id: 'hexagon-cell',\n        updateTriggers: updateTriggers\n      }), {\n        data: cpuAggregator.state.layerData.data\n      });\n    }\n  }]);\n\n  return HexagonLayer;\n}(AggregationLayer);\n\nexport { HexagonLayer as default };\nHexagonLayer.layerName = 'HexagonLayer';\nHexagonLayer.defaultProps = defaultProps;","export var defaultColorRange = [[255, 255, 178], [254, 217, 118], [254, 178, 76], [253, 141, 60], [240, 59, 32], [189, 0, 38]];\nexport function colorRangeToFlatArray(colorRange) {\n  var normalize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var ArrayType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Float32Array;\n  var flatArray;\n\n  if (Number.isFinite(colorRange[0])) {\n    flatArray = new ArrayType(colorRange);\n  } else {\n    flatArray = new ArrayType(colorRange.length * 4);\n    var index = 0;\n\n    for (var i = 0; i < colorRange.length; i++) {\n      var color = colorRange[i];\n      flatArray[index++] = color[0];\n      flatArray[index++] = color[1];\n      flatArray[index++] = color[2];\n      flatArray[index++] = Number.isFinite(color[3]) ? color[3] : 255;\n    }\n  }\n\n  if (normalize) {\n    for (var _i = 0; _i < flatArray.length; _i++) {\n      flatArray[_i] /= 255;\n    }\n  }\n\n  return flatArray;\n}","import { hexbin } from 'd3-hexbin';\nimport { createIterable, log } from '@deck.gl/core';\nexport function pointToHexbin(props, aggregationParams) {\n  var data = props.data,\n      radius = props.radius;\n  var viewport = aggregationParams.viewport,\n      attributes = aggregationParams.attributes;\n  var centerLngLat = data.length ? getPointsCenter(data, aggregationParams) : null;\n  var radiusCommon = getRadiusInCommon(radius, viewport, centerLngLat);\n  var screenPoints = [];\n\n  var _createIterable = createIterable(data),\n      iterable = _createIterable.iterable,\n      objectInfo = _createIterable.objectInfo;\n\n  var positions = attributes.positions.value;\n\n  var _attributes$positions = attributes.positions.getAccessor(),\n      size = _attributes$positions.size;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var object = _step.value;\n      objectInfo.index++;\n      var posIndex = objectInfo.index * size;\n      var position = [positions[posIndex], positions[posIndex + 1]];\n      var arrayIsFinite = Number.isFinite(position[0]) && Number.isFinite(position[1]);\n\n      if (arrayIsFinite) {\n        screenPoints.push(Object.assign({\n          screenCoord: viewport.projectFlat(position)\n        }, object));\n      } else {\n        log.warn('HexagonLayer: invalid position')();\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var newHexbin = hexbin().radius(radiusCommon).x(function (d) {\n    return d.screenCoord[0];\n  }).y(function (d) {\n    return d.screenCoord[1];\n  });\n  var hexagonBins = newHexbin(screenPoints);\n  return {\n    hexagons: hexagonBins.map(function (hex, index) {\n      return {\n        position: viewport.unprojectFlat([hex.x, hex.y]),\n        points: hex,\n        index: index\n      };\n    }),\n    radiusCommon: radiusCommon\n  };\n}\nexport function getPointsCenter(data, aggregationParams) {\n  var attributes = aggregationParams.attributes;\n  var positions = attributes.positions.value;\n\n  var _attributes$positions2 = attributes.positions.getAccessor(),\n      size = _attributes$positions2.size;\n\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n  var i;\n\n  for (i = 0; i < size * data.length; i += size) {\n    var x = positions[i];\n    var y = positions[i + 1];\n    var arrayIsFinite = Number.isFinite(x) && Number.isFinite(y);\n\n    if (arrayIsFinite) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [minX, minY, maxX, maxY].every(Number.isFinite) ? [(minX + maxX) / 2, (minY + maxY) / 2] : null;\n}\nexport function getRadiusInCommon(radius, viewport, center) {\n  var _viewport$getDistance = viewport.getDistanceScales(center),\n      unitsPerMeter = _viewport$getDistance.unitsPerMeter;\n\n  return radius * unitsPerMeter[0];\n}","import * as request from 'd3-request';\n// @ts-ignore\nimport { AmbientLight, PointLight, LightingEffect } from '@deck.gl/core';\n// @ts-ignore\nimport { HexagonLayer } from '@deck.gl/aggregation-layers';\nimport DeckGLLayer from 'maptalks.deckgl';\nimport Base from \"./base\";\nimport React from \"react\";\n\nconst DATA_URL =\n  'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/3d-heatmap/heatmap-data.csv';\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n\nconst pointLight1 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-0.144528, 49.739968, 80000]\n});\n\nconst pointLight2 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-3.807751, 54.104682, 8000]\n});\n\n// eslint-disable-next-line no-unused-vars\nconst lightingEffect = new LightingEffect({ ambientLight, pointLight1, pointLight2 });\n\nconst LIGHT_SETTINGS = {\n  lightsPosition: [-0.144528, 49.739968, 8000, -3.807751, 54.104682, 8000],\n  ambientRatio: 0.4,\n  diffuseRatio: 0.6,\n  specularRatio: 0.2,\n  lightsStrength: [0.8, 0.0, 0.8, 0.0],\n  numberOfLights: 2\n};\n\nconst material = {\n  ambient: 0.64,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [51, 51, 51]\n};\n\nconst colorRange = [\n  [1, 152, 189],\n  [73, 227, 206],\n  [216, 254, 181],\n  [254, 237, 177],\n  [254, 173, 84],\n  [209, 55, 78]\n];\n\nconst elevationScale = { min: 1, max: 50 };\n\ninterface IProps {\n\n}\n\ninterface IState {\n  elevationScale: number;\n  radius: number;\n  upperPercentile: number;\n  coverage: number;\n  data: any;\n  x?: number;\n  y?: number;\n  hoveredObject?: any;\n}\n\nfunction getTooltip(object: any) {\n  if (!object) {\n    return null;\n  }\n  const lat = object.position[1];\n  const lng = object.position[0];\n  const count = object.points.length;\n\n  return `\\\n    latitude: ${Number.isFinite(lat) ? lat.toFixed(6) : ''}\n    longitude: ${Number.isFinite(lng) ? lng.toFixed(6) : ''}\n    ${count} Accidents`;\n}\n\nclass Hexagon extends Base {\n  private deckLayer: DeckGLLayer | null;\n  private startAnimationTimer: undefined | number;\n  private intervalTimer: undefined | number;\n\n  state: IState = {\n    elevationScale: elevationScale.min,\n    radius: 1000,\n    upperPercentile: 100,\n    coverage: 1,\n    data: [],\n  }\n\n  constructor (props: IProps) {\n    super(props);\n    this.deckLayer = null;\n\n    this.viewState = {\n      center: [-1.415727, 52.232395],\n      zoom: 6.6,\n      pitch: 40.5,\n      bearing: -27,\n    };\n\n    this.startAnimationTimer = undefined;\n    this.intervalTimer = undefined;\n\n    this._startAnimate = this._startAnimate.bind(this);\n    this._animateHeight = this._animateHeight.bind(this);\n  }\n\n  initMap() {\n    super.initMap();\n\n    request.csv(DATA_URL, (error: any, response: any) => {\n      if (!error) {\n        const data = response.map((d: { lng: any; lat: any; }) => [Number(d.lng), Number(d.lat)]);\n        this._animate(data);\n      }\n    });\n  }\n\n  componentWillUnmount () {\n    // this.map.remove()\n    if (this.deckLayer) {\n      // @ts-ignore\n      this.deckLayer.remove()\n    }\n    super.componentWillUnmount();\n  }\n\n  onHover = ({ x, y, object }: any) => {\n    this.setState({ x, y, hoveredObject: object });\n  }\n\n  renderTooltip () {\n    const { x, y, hoveredObject } = this.state;\n    return (\n      hoveredObject && (\n        <div className=\"tooltip\" style={{ top: y, left: x }}>\n          { getTooltip(hoveredObject) }\n        </div>\n      )\n    );\n  }\n\n  _renderLayers () {\n    const { data, radius, upperPercentile, coverage } = this.state;\n    const props = {\n      layers: [\n        new HexagonLayer({\n          id: 'heatmap',\n          colorRange,\n          coverage,\n          data,\n          elevationRange: [0, 3000],\n          elevationScale: this.state.elevationScale,\n          extruded: true,\n          getPosition: (d: any) => d,\n          lightSettings: LIGHT_SETTINGS,\n          onHover: this.onHover,\n          opacity: 1,\n          pickable: Boolean(this.onHover),\n          radius,\n          upperPercentile,\n          material,\n\n          transitions: {\n            elevationScale: 3000\n          }\n        })\n      ],\n      effects: [lightingEffect]\n    }\n    if (!this.deckLayer) {\n      this.deckLayer = new DeckGLLayer('deck', props, {\n        animation: true,\n        forceRenderOnMoving: true,\n        forceRenderOnZooming: true,\n        renderStart: () => {\n          // this.renderState?.update();\n        },\n      });\n\n      this.map.addLayer(this.deckLayer);\n    } else {\n      this.deckLayer.setProps(props);\n    }\n  }\n\n  _animate (data: number[][]) {\n    this.setState({\n      data: data\n    });\n    this._stopAnimate();\n    // wait 1.5 secs to start animation so that all data are loaded\n    this.startAnimationTimer = window.setTimeout(this._startAnimate, 1500);\n  }\n\n  _startAnimate () {\n    this.intervalTimer = window.setInterval(this._animateHeight, 20);\n  }\n\n  _stopAnimate () {\n    window.clearTimeout(this.startAnimationTimer);\n    window.clearTimeout(this.intervalTimer);\n  }\n\n  _animateHeight () {\n    if (this.state.elevationScale === elevationScale.max) {\n      this._stopAnimate();\n    } else {\n      this.setState({\n        elevationScale: this.state.elevationScale + 1\n      }, () => {\n        this.renderState?.update();\n        this._renderLayers()\n      });\n    }\n  }\n}\n\nexport default Hexagon;\n","export default \"#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\\n\\nstruct AmbientLight {\\n vec3 color;\\n};\\n\\nstruct PointLight {\\n vec3 color;\\n vec3 position;\\n vec3 attenuation;\\n};\\n\\nstruct DirectionalLight {\\n  vec3 color;\\n  vec3 direction;\\n};\\n\\nuniform AmbientLight lighting_uAmbientLight;\\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\\nuniform int lighting_uPointLightCount;\\nuniform int lighting_uDirectionalLightCount;\\n\\nuniform bool lighting_uEnabled;\\n\\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\\n  return pointLight.attenuation.x\\n       + pointLight.attenuation.y * distance\\n       + pointLight.attenuation.z * distance * distance;\\n}\\n\\n#endif\\n\";","import lightingShader from './lights.glsl';\nexport default {\n  name: 'lights',\n  vs: lightingShader,\n  fs: lightingShader,\n  getUniforms: getUniforms,\n  defines: {\n    MAX_LIGHTS: 3\n  }\n};\nvar INITIAL_MODULE_OPTIONS = {};\n\nfunction convertColor() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? [0, 0, 0] : _ref$color,\n      _ref$intensity = _ref.intensity,\n      intensity = _ref$intensity === void 0 ? 1.0 : _ref$intensity;\n\n  return color.map(function (component) {\n    return component * intensity / 255.0;\n  });\n}\n\nfunction getLightSourceUniforms(_ref2) {\n  var ambientLight = _ref2.ambientLight,\n      _ref2$pointLights = _ref2.pointLights,\n      pointLights = _ref2$pointLights === void 0 ? [] : _ref2$pointLights,\n      _ref2$directionalLigh = _ref2.directionalLights,\n      directionalLights = _ref2$directionalLigh === void 0 ? [] : _ref2$directionalLigh;\n  var lightSourceUniforms = {};\n\n  if (ambientLight) {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = convertColor(ambientLight);\n  } else {\n    lightSourceUniforms['lighting_uAmbientLight.color'] = [0, 0, 0];\n  }\n\n  pointLights.forEach(function (pointLight, index) {\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].color\")] = convertColor(pointLight);\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].position\")] = pointLight.position;\n    lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].attenuation\")] = pointLight.attenuation || [1, 0, 0];\n  });\n  lightSourceUniforms.lighting_uPointLightCount = pointLights.length;\n  directionalLights.forEach(function (directionalLight, index) {\n    lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].color\")] = convertColor(directionalLight);\n    lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].direction\")] = directionalLight.direction;\n  });\n  lightSourceUniforms.lighting_uDirectionalLightCount = directionalLights.length;\n  return lightSourceUniforms;\n}\n\nfunction getUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n\n  if ('lightSources' in opts) {\n    var _ref3 = opts.lightSources || {},\n        ambientLight = _ref3.ambientLight,\n        pointLights = _ref3.pointLights,\n        directionalLights = _ref3.directionalLights;\n\n    var hasLights = ambientLight || pointLights && pointLights.length > 0 || directionalLights && directionalLights.length > 0;\n\n    if (!hasLights) {\n      return {\n        lighting_uEnabled: false\n      };\n    }\n\n    return Object.assign({}, getLightSourceUniforms({\n      ambientLight: ambientLight,\n      pointLights: pointLights,\n      directionalLights: directionalLights\n    }), {\n      lighting_uEnabled: true\n    });\n  }\n\n  if ('lights' in opts) {\n    var lightSources = {\n      pointLights: [],\n      directionalLights: []\n    };\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = (opts.lights || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var light = _step.value;\n\n        switch (light.type) {\n          case 'ambient':\n            lightSources.ambientLight = light;\n            break;\n\n          case 'directional':\n            lightSources.directionalLights.push(light);\n            break;\n\n          case 'point':\n            lightSources.pointLights.push(light);\n            break;\n\n          default:\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return getUniforms({\n      lightSources: lightSources\n    });\n  }\n\n  return {};\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Layer from './layer';\nimport debug from '../debug';\nimport { flatten } from '../utils/flatten';\nvar TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nvar CompositeLayer = function (_Layer) {\n  _inherits(CompositeLayer, _Layer);\n\n  function CompositeLayer() {\n    _classCallCheck(this, CompositeLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CompositeLayer).apply(this, arguments));\n  }\n\n  _createClass(CompositeLayer, [{\n    key: \"getSubLayers\",\n    value: function getSubLayers() {\n      return this.internalState && this.internalState.subLayers || [];\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {}\n  }, {\n    key: \"setState\",\n    value: function setState(updateObject) {\n      _get(_getPrototypeOf(CompositeLayer.prototype), \"setState\", this).call(this, updateObject);\n\n      this.setNeedsUpdate();\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref) {\n      var info = _ref.info;\n      var object = info.object;\n      var isDataWrapped = object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n      if (!isDataWrapped) {\n        return info;\n      }\n\n      return Object.assign(info, {\n        object: object.__source.object,\n        index: object.__source.index\n      });\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      return null;\n    }\n  }, {\n    key: \"shouldRenderSubLayer\",\n    value: function shouldRenderSubLayer(id, data) {\n      var overridingProps = this.props._subLayerProps;\n      return data && data.length || overridingProps && overridingProps[id];\n    }\n  }, {\n    key: \"getSubLayerClass\",\n    value: function getSubLayerClass(id, DefaultLayerClass) {\n      var overridingProps = this.props._subLayerProps;\n      return overridingProps && overridingProps[id] && overridingProps[id].type || DefaultLayerClass;\n    }\n  }, {\n    key: \"getSubLayerRow\",\n    value: function getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n      row.__source = {\n        parent: this,\n        object: sourceObject,\n        index: sourceObjectIndex\n      };\n      return row;\n    }\n  }, {\n    key: \"getSubLayerAccessor\",\n    value: function getSubLayerAccessor(accessor) {\n      if (typeof accessor === 'function') {\n        var objectInfo = {\n          data: this.props.data,\n          target: []\n        };\n        return function (x, i) {\n          if (x.__source) {\n            objectInfo.index = x.__source.index;\n            return accessor(x.__source.object, objectInfo);\n          }\n\n          return accessor(x, i);\n        };\n      }\n\n      return accessor;\n    }\n  }, {\n    key: \"getSubLayerProps\",\n    value: function getSubLayerProps() {\n      var sublayerProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props = this.props,\n          opacity = _this$props.opacity,\n          pickable = _this$props.pickable,\n          visible = _this$props.visible,\n          parameters = _this$props.parameters,\n          getPolygonOffset = _this$props.getPolygonOffset,\n          highlightedObjectIndex = _this$props.highlightedObjectIndex,\n          autoHighlight = _this$props.autoHighlight,\n          highlightColor = _this$props.highlightColor,\n          coordinateSystem = _this$props.coordinateSystem,\n          coordinateOrigin = _this$props.coordinateOrigin,\n          wrapLongitude = _this$props.wrapLongitude,\n          positionFormat = _this$props.positionFormat,\n          modelMatrix = _this$props.modelMatrix,\n          extensions = _this$props.extensions,\n          overridingProps = _this$props._subLayerProps;\n      var newProps = {\n        opacity: opacity,\n        pickable: pickable,\n        visible: visible,\n        parameters: parameters,\n        getPolygonOffset: getPolygonOffset,\n        highlightedObjectIndex: highlightedObjectIndex,\n        autoHighlight: autoHighlight,\n        highlightColor: highlightColor,\n        coordinateSystem: coordinateSystem,\n        coordinateOrigin: coordinateOrigin,\n        wrapLongitude: wrapLongitude,\n        positionFormat: positionFormat,\n        modelMatrix: modelMatrix,\n        extensions: extensions\n      };\n      var overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n      var overridingSublayerTriggers = overridingSublayerProps && overridingSublayerProps.updateTriggers;\n      var sublayerId = sublayerProps.id || 'sublayer';\n\n      if (overridingSublayerProps) {\n        var propTypes = this.constructor._propTypes;\n\n        for (var key in overridingSublayerProps) {\n          var propType = propTypes[key];\n\n          if (propType && propType.type === 'accessor') {\n            overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n          }\n        }\n      }\n\n      Object.assign(newProps, sublayerProps, overridingSublayerProps, {\n        id: \"\".concat(this.props.id, \"-\").concat(sublayerId),\n        updateTriggers: Object.assign({\n          all: this.props.updateTriggers.all\n        }, sublayerProps.updateTriggers, overridingSublayerTriggers)\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = extensions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var extension = _step.value;\n          var passThroughProps = extension.getSubLayerProps.call(this, extension);\n\n          if (passThroughProps) {\n            Object.assign(newProps, passThroughProps, {\n              updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return newProps;\n    }\n  }, {\n    key: \"_getAttributeManager\",\n    value: function _getAttributeManager() {\n      return null;\n    }\n  }, {\n    key: \"_renderLayers\",\n    value: function _renderLayers() {\n      var subLayers = this.internalState.subLayers;\n      var shouldUpdate = !subLayers || this.needsUpdate();\n\n      if (shouldUpdate) {\n        subLayers = this.renderLayers();\n        subLayers = flatten(subLayers, Boolean);\n        this.internalState.subLayers = subLayers;\n      }\n\n      debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = subLayers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var layer = _step2.value;\n          layer.parent = this;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isComposite\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return _get(_getPrototypeOf(CompositeLayer.prototype), \"isLoaded\", this) && this.getSubLayers().every(function (layer) {\n        return layer.isLoaded;\n      });\n    }\n  }]);\n\n  return CompositeLayer;\n}(Layer);\n\nexport { CompositeLayer as default };\nCompositeLayer.layerName = 'CompositeLayer';","export default \"\\nuniform float lighting_uAmbient;\\nuniform float lighting_uDiffuse;\\nuniform float lighting_uShininess;\\nuniform vec3  lighting_uSpecularColor;\\n\\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\\n    vec3 halfway_direction = normalize(light_direction + view_direction);\\n    float lambertian = dot(light_direction, normal_worldspace);\\n    float specular = 0.0;\\n    if (lambertian > 0.0) {\\n      float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\\n      specular = pow(specular_angle, lighting_uShininess);\\n    }\\n    lambertian = max(lambertian, 0.0);\\n    return (lambertian * lighting_uDiffuse * surfaceColor + specular * lighting_uSpecularColor) * color;\\n}\\n\\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\\n  vec3 lightColor = surfaceColor;\\n\\n  if (lighting_uEnabled) {\\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\\n    lightColor = lighting_uAmbient * surfaceColor * lighting_uAmbientLight.color;\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uPointLightCount) {\\n        break;\\n      }\\n      PointLight pointLight = lighting_uPointLight[i];\\n      vec3 light_position_worldspace = pointLight.position;\\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\\n    }\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uDirectionalLightCount) {\\n        break;\\n      }\\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\\n    }\\n  }\\n  return lightColor;\\n}\\n\\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\\n  vec3 lightColor = vec3(0, 0, 0);\\n  vec3 surfaceColor = vec3(0, 0, 0);\\n\\n  if (lighting_uEnabled) {\\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uPointLightCount) {\\n        break;\\n      }\\n      PointLight pointLight = lighting_uPointLight[i];\\n      vec3 light_position_worldspace = pointLight.position;\\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\\n    }\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uDirectionalLightCount) {\\n        break;\\n      }\\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\\n    }\\n  }\\n  return lightColor;\\n}\\n\";","import lights from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\nvar gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms: getUniforms\n};\nvar phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms: getUniforms\n};\nvar INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  var _material$ambient = material.ambient,\n      ambient = _material$ambient === void 0 ? 0.35 : _material$ambient,\n      _material$diffuse = material.diffuse,\n      diffuse = _material$diffuse === void 0 ? 0.6 : _material$diffuse,\n      _material$shininess = material.shininess,\n      shininess = _material$shininess === void 0 ? 32 : _material$shininess,\n      _material$specularCol = material.specularColor,\n      specularColor = _material$specularCol === void 0 ? [30, 30, 30] : _material$specularCol;\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(function (x) {\n      return x / 255;\n    })\n  };\n}\n\nfunction getUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  var material = opts.material;\n\n  if (!material) {\n    return {\n      lighting_uEnabled: false\n    };\n  }\n\n  return getMaterialUniforms(material);\n}\n\nexport { gouraudLighting, phongLighting };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { projectPosition } from '../../shaderlib/project/project-functions';\nimport { COORDINATE_SYSTEM } from '../../lib';\nvar DEFAULT_LIGHT_COLOR = [255, 255, 255];\nvar DEFAULT_LIGHT_INTENSITY = 1.0;\nvar DEFAULT_ATTENUATION = [0, 0, 1];\nvar DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\nvar idCount = 0;\nexport var PointLight = function () {\n  function PointLight() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, PointLight);\n\n    var _props$color = props.color,\n        color = _props$color === void 0 ? DEFAULT_LIGHT_COLOR : _props$color;\n    var _props$intensity = props.intensity,\n        intensity = _props$intensity === void 0 ? DEFAULT_LIGHT_INTENSITY : _props$intensity;\n    var _props$position = props.position,\n        position = _props$position === void 0 ? DEFAULT_LIGHT_POSITION : _props$position;\n    this.id = props.id || \"point-\".concat(idCount++);\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = Object.assign({}, this);\n  }\n\n  _createClass(PointLight, [{\n    key: \"getProjectedLight\",\n    value: function getProjectedLight(_ref) {\n      var layer = _ref.layer;\n      var projectedLight = this.projectedLight;\n      var viewport = layer.context.viewport;\n      var _layer$props = layer.props,\n          coordinateSystem = _layer$props.coordinateSystem,\n          coordinateOrigin = _layer$props.coordinateOrigin;\n      var position = projectPosition(this.position, {\n        viewport: viewport,\n        coordinateSystem: coordinateSystem,\n        coordinateOrigin: coordinateOrigin,\n        fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN,\n        fromCoordinateOrigin: [0, 0, 0]\n      });\n      projectedLight.color = this.color;\n      projectedLight.intensity = this.intensity;\n      projectedLight.position = position;\n      return projectedLight;\n    }\n  }]);\n\n  return PointLight;\n}();\n\nfunction getAttenuation(props) {\n  if ('attenuation' in props) {\n    return props.attenuation;\n  }\n\n  if ('intensity' in props) {\n    return [0, 0, props.intensity];\n  }\n\n  return DEFAULT_ATTENUATION;\n}"],"sourceRoot":""}