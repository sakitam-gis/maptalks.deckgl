{"version":3,"sources":["webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-collection/src/map.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-collection/src/set.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-dispatch/src/dispatch.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-request/src/request.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-request/src/type.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-dsv/src/dsv.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-request/src/html.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-request/src/json.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-request/src/text.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-request/src/xml.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-dsv/src/csv.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-request/src/dsv.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-request/src/csv.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-dsv/src/tsv.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/d3-request/src/tsv.js"],"names":["Map","map","object","f","each","value","key","set","Array","isArray","o","i","n","length","prototype","constructor","has","this","get","remove","property","clear","keys","push","slice","values","entries","size","empty","Set","proto","add","noop","dispatch","t","arguments","_","test","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","hasOwnProperty","type","c","callback","concat","on","typename","T","copy","call","that","args","apply","request","_mimeType","_response","_responseType","event","headers","xhr","XMLHttpRequest","_user","_password","_timeout","respond","result","status","responseType","response","responseText","hasResponse","e","XDomainRequest","url","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","toLowerCase","mimeType","timeout","user","password","data","send","post","method","open","setRequestHeader","overrideMimeType","error","fixCallback","abort","r","defaultMimeType","EOL","document","createRange","createContextualFragment","JSON","parse","xml","responseXML","EOF","objectConverter","columns","Function","stringify","join","inferColumns","rows","columnSet","Object","create","forEach","row","column","pad","width","s","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","reFormat","RegExp","delimiter","DELIMITER","charCodeAt","parseRows","text","N","I","eof","eol","token","j","replace","preformatBody","formatValue","formatRow","Date","convert","customConverter","format","formatBody","formatRows","csv","dsv","csvParse","responseOf","tsv","tsvParse"],"mappings":"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","file":"6208b6cff8a2f01b5230d770bc953eb905893866-ecc87a37fbafde9247b9.js","sourcesContent":["export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function has(key) {\n    return prefix + key in this;\n  },\n  get: function get(key) {\n    return this[prefix + key];\n  },\n  set: function set(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function remove(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function clear() {\n    for (var property in this) {\n      if (property[0] === prefix) delete this[property];\n    }\n  },\n  keys: function keys() {\n    var keys = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) keys.push(property.slice(1));\n    }\n\n    return keys;\n  },\n  values: function values() {\n    var values = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) values.push(this[property]);\n    }\n\n    return values;\n  },\n  entries: function entries() {\n    var entries = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) entries.push({\n        key: property.slice(1),\n        value: this[property]\n      });\n    }\n\n    return entries;\n  },\n  size: function size() {\n    var size = 0;\n\n    for (var property in this) {\n      if (property[0] === prefix) ++size;\n    }\n\n    return size;\n  },\n  empty: function empty() {\n    for (var property in this) {\n      if (property[0] === prefix) return false;\n    }\n\n    return true;\n  },\n  each: function each(f) {\n    for (var property in this) {\n      if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map(); // Copy constructor.\n\n  if (object instanceof Map) object.each(function (value, key) {\n    map.set(key, value);\n  }); // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (f == null) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f(o = object[i], i, object), o);\n      }\n    } // Convert object to map.\n    else if (object) for (var key in object) {\n        map.set(key, object[key]);\n      }\n  return map;\n}\n\nexport default map;","import { default as map, prefix } from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function add(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set(); // Copy constructor.\n\n  if (object instanceof Set) object.each(function (value) {\n    set.add(value);\n  }); // Otherwise, assume it’s an array.\n  else if (object) {\n      var i = -1,\n          n = object.length;\n      if (f == null) while (++i < n) {\n        set.add(object[i]);\n      } else while (++i < n) {\n        set.add(f(object[i], i, object));\n      }\n    }\n  return set;\n}\n\nexport default set;","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _ || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","import { map } from \"d3-collection\";\nimport { dispatch } from \"d3-dispatch\";\nexport default function (url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      _mimeType,\n      headers = map(),\n      xhr = new XMLHttpRequest(),\n      _user = null,\n      _password = null,\n      _response,\n      _responseType,\n      _timeout = 0; // If IE does not support CORS, use XDomainRequest.\n\n\n  if (typeof XDomainRequest !== \"undefined\" && !(\"withCredentials\" in xhr) && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest();\n  \"onload\" in xhr ? xhr.onload = xhr.onerror = xhr.ontimeout = respond : xhr.onreadystatechange = function (o) {\n    xhr.readyState > 3 && respond(o);\n  };\n\n  function respond(o) {\n    var status = xhr.status,\n        result;\n\n    if (!status && hasResponse(xhr) || status >= 200 && status < 300 || status === 304) {\n      if (_response) {\n        try {\n          result = _response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function (e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function header(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);else headers.set(name, value + \"\");\n      return request;\n    },\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function mimeType(value) {\n      if (!arguments.length) return _mimeType;\n      _mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function responseType(value) {\n      if (!arguments.length) return _responseType;\n      _responseType = value;\n      return request;\n    },\n    timeout: function timeout(value) {\n      if (!arguments.length) return _timeout;\n      _timeout = +value;\n      return request;\n    },\n    user: function user(value) {\n      return arguments.length < 1 ? _user : (_user = value == null ? null : value + \"\", request);\n    },\n    password: function password(value) {\n      return arguments.length < 1 ? _password : (_password = value == null ? null : value + \"\", request);\n    },\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function response(value) {\n      _response = value;\n      return request;\n    },\n    // Alias for send(\"GET\", …).\n    get: function get(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n    // Alias for send(\"POST\", …).\n    post: function post(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n    // If callback is non-null, it will be used for error and load events.\n    send: function send(method, data, callback) {\n      xhr.open(method, url, true, _user, _password);\n      if (_mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", _mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function (value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n      if (_mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(_mimeType);\n      if (_responseType != null) xhr.responseType = _responseType;\n      if (_timeout > 0) xhr.timeout = _timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function (xhr) {\n        callback(null, xhr);\n      });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n    abort: function abort() {\n      xhr.abort();\n      return request;\n    },\n    on: function on() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function (error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\" ? xhr.response // null on error\n  : xhr.responseText; // \"\" on error\n}","import request from \"./request\";\nexport default function (defaultMimeType, response) {\n  return function (url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n\n    return r;\n  };\n}","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function (row, i) {\n    return f(object(row), i, columns);\n  };\n} // Compute unique columns in order of discovery.\n\n\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n  rows.forEach(function (row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\",\n      length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6) : year > 9999 ? \"+\" + pad(year, 6) : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\" : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2) + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\" : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\" : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\" : \"\");\n}\n\nexport default function (delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert,\n        columns,\n        rows = parseRows(text, function (row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [],\n        // output rows\n    N = text.length,\n        I = 0,\n        // current character index\n    n = 0,\n        // current line number\n    t,\n        // current token\n    eof = N <= 0,\n        // current token followed by EOF?\n    eol = false; // current token followed by EOL?\n    // Strip the trailing newline.\n\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL; // Unescape quotes.\n\n      var i,\n          j = I,\n          c;\n\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {\n          ;\n        }\n\n        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      } // Find next delimiter or newline.\n\n\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        } else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      } // Return last token before EOF.\n\n\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n\n      while (t !== EOL && t !== EOF) {\n        row.push(t), t = token();\n      }\n\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function (row) {\n      return columns.map(function (column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\" : value instanceof Date ? formatDate(value) : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}","import type from \"./type\";\nexport default type(\"text/html\", function (xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});","import type from \"./type\";\nexport default type(\"application/json\", function (xhr) {\n  return JSON.parse(xhr.responseText);\n});","import type from \"./type\";\nexport default type(\"text/plain\", function (xhr) {\n  return xhr.responseText;\n});","import type from \"./type\";\nexport default type(\"application/xml\", function (xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});","import dsv from \"./dsv.js\";\nvar csv = dsv(\",\");\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;","import request from \"./request\";\nexport default function (defaultMimeType, parse) {\n  return function (url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n\n    r.row = function (_) {\n      return arguments.length ? r.response(responseOf(parse, row = _)) : row;\n    };\n\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function (request) {\n    return parse(request.responseText, row);\n  };\n}","import { csvParse } from \"d3-dsv\";\nimport dsv from \"./dsv\";\nexport default dsv(\"text/csv\", csvParse);","import dsv from \"./dsv.js\";\nvar tsv = dsv(\"\\t\");\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;","import { tsvParse } from \"d3-dsv\";\nimport dsv from \"./dsv\";\nexport default dsv(\"text/tab-separated-values\", tsvParse);"],"sourceRoot":""}