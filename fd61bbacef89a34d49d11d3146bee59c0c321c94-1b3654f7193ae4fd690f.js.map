{"version":3,"sources":["webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/constants.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/lib/axis-aligned-bounding-box.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/lib/bounding-sphere.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/lib/oriented-bounding-box.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/lib/plane.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/lib/culling-volume.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/lib/perspective-off-center-frustum.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/lib/perspective-frustum.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/algorithms/bounding-sphere-from-points.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/algorithms/compute-eigen-decomposition.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/culling/dist/esm/algorithms/bounding-box-from-points.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@loaders.gl/loader-utils/dist/esm/lib/request-utils/request-scheduler.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/core/dist/esm/classes/matrix3.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@math.gl/core/dist/esm/lib/math-utils.js"],"names":["INTERSECTION","Object","freeze","OUTSIDE","INTERSECTING","INSIDE","scratchVector","scratchNormal","AxisAlignedBoundingBox","minimum","arguments","length","undefined","maximum","center","this","copy","add","scale","halfDiagonal","subtract","key","value","right","Boolean","equals","plane","normal","from","e","x","Math","abs","y","z","s","dot","distance","point","sqrt","distanceSquaredTo","d","offset","distanceSquared","scratchVector2","BoundingSphere","radius","fromCenterRadius","corner","oppositeCorner","boundingSphere","leftCenter","leftRadius","rightCenter","rightRadius","toRightCenter","centerSeparation","magnitude","clone","halfDistanceBetweenTangentPoints","distanceToPlane","_transform","transform","mat4","max","lengthSquared","scratchOffset","scratchVectorU","scratchVectorV","scratchVectorW","scratchCorner","scratchToCenter","fromOrientedBoundingBoxScratchU","fromOrientedBoundingBoxScratchV","fromOrientedBoundingBoxScratchW","MATRIX3","OrientedBoundingBox","halfAxes","result","u","getColumn","v","w","cornerVector","normalX","normalY","normalZ","radEffective","uHalf","vHalf","wHalf","normalize","position","direction","minDist","Number","POSITIVE_INFINITY","maxDist","NEGATIVE_INFINITY","toCenter","mag","min","scratchPosition","Plane","fromNormalDistance","assert","isFinite","a","b","c","set","len","matrix4","transformAsVector","fromPointNormal","pointDistance","getPointDistance","scaledNormal","to","faces","scratchPlaneCenter","scratchPlaneNormal","CullingVolume","planes","every","get","planeIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","faceNormal","plane0","plane1","plane0Center","plane1Center","negatedFaceNormal","negate","err","boundingVolume","intersect","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","intersectPlane","parentPlaneMask","MASK_OUTSIDE","MASK_INSIDE","mask","k","flag","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","scratchPlaneUpVector","scratchPlaneRightVector","scratchPlaneNearCenter","scratchPlaneFarCenter","PerspectiveOffCenterFrustum","options","near","far","left","_left","_right","top","_top","bottom","_bottom","_near","_far","_cullingVolume","_perspectiveMatrix","_infinitePerspective","other","up","cross","nearCenter","multiplyByScalar","farCenter","drawingBufferWidth","drawingBufferHeight","update","inverseNear","tanTheta","pixelHeight","pixelWidth","frustum","Infinity","PerspectiveFrustum","xOffset","yOffset","_offCenterFrustum","fov","_fov","_fovy","_sseDenominator","aspectRatio","_aspectRatio","_xOffset","_yOffset","val","computeCullingVolume","getPixelDimensions","projectionMatrix","infiniteProjectionMatrix","f","PI","atan","tan","DEFAULT_PROPS","id","throttleRequests","maxRequests","RequestScheduler","props","requestQueue","activeRequestCount","requestMap","Map","stats","_deferredUpdate","handle","getPriority","Promise","resolve","has","request","promise","_issueNewRequests","_this","isDone","_this2","setTimeout","_issueNewRequestsAsync","freeSlots","_updateAllRequests","shift","_issueRequest","_updateRequest","splice","sort","priority","IDENTITY","ZERO","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL1ROW0","COL1ROW1","COL1ROW2","COL2ROW0","COL2ROW1","COL2ROW2","constants","Matrix3","_Matrix","array","call","Array","isArray","identity","check","m00","m10","m20","m01","m11","m21","m02","m12","m22","q","radians","factor","vec","vector","Error","EPSILON1","EPSILON2","EPSILON3","EPSILON4","EPSILON5","EPSILON6","EPSILON7","EPSILON8","EPSILON9","EPSILON10","EPSILON11","EPSILON12","EPSILON13","EPSILON14","EPSILON15","EPSILON16","EPSILON17","EPSILON18","EPSILON19","EPSILON20","PI_OVER_TWO","PI_OVER_FOUR","PI_OVER_SIX","TWO_PI"],"mappings":"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","file":"fd61bbacef89a34d49d11d3146bee59c0c321c94-1b3654f7193ae4fd690f.js","sourcesContent":["export var INTERSECTION = Object.freeze({\n  OUTSIDE: -1,\n  INTERSECTING: 0,\n  INSIDE: 1\n});","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { Vector3 } from '@math.gl/core';\nimport { INTERSECTION } from '../constants';\nvar scratchVector = new Vector3();\nvar scratchNormal = new Vector3();\n\nvar AxisAlignedBoundingBox = function () {\n  function AxisAlignedBoundingBox() {\n    var minimum = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 0];\n    var maximum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0];\n    var center = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, AxisAlignedBoundingBox);\n\n    center = center || scratchVector.copy(minimum).add(maximum).scale(0.5);\n    this.center = new Vector3(center);\n    this.halfDiagonal = new Vector3(maximum).subtract(this.center);\n    this.minimum = new Vector3(minimum);\n    this.maximum = new Vector3(maximum);\n  }\n\n  _createClass(AxisAlignedBoundingBox, [{\n    key: \"clone\",\n    value: function clone() {\n      return new AxisAlignedBoundingBox(this.minimum, this.maximum, this.center);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(right) {\n      return this === right || Boolean(right) && this.minimum.equals(right.minimum) && this.maximum.equals(right.maximum);\n    }\n  }, {\n    key: \"intersectPlane\",\n    value: function intersectPlane(plane) {\n      var halfDiagonal = this.halfDiagonal;\n      var normal = scratchNormal.from(plane.normal);\n      var e = halfDiagonal.x * Math.abs(normal.x) + halfDiagonal.y * Math.abs(normal.y) + halfDiagonal.z * Math.abs(normal.z);\n      var s = this.center.dot(normal) + plane.distance;\n\n      if (s - e > 0) {\n        return INTERSECTION.INSIDE;\n      }\n\n      if (s + e < 0) {\n        return INTERSECTION.OUTSIDE;\n      }\n\n      return INTERSECTION.INTERSECTING;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(point) {\n      return Math.sqrt(this.distanceSquaredTo(point));\n    }\n  }, {\n    key: \"distanceSquaredTo\",\n    value: function distanceSquaredTo(point) {\n      var offset = scratchVector.from(point).subtract(this.center);\n      var halfDiagonal = this.halfDiagonal;\n      var distanceSquared = 0.0;\n      var d;\n      d = Math.abs(offset.x) - halfDiagonal.x;\n\n      if (d > 0) {\n        distanceSquared += d * d;\n      }\n\n      d = Math.abs(offset.y) - halfDiagonal.y;\n\n      if (d > 0) {\n        distanceSquared += d * d;\n      }\n\n      d = Math.abs(offset.z) - halfDiagonal.z;\n\n      if (d > 0) {\n        distanceSquared += d * d;\n      }\n\n      return distanceSquared;\n    }\n  }]);\n\n  return AxisAlignedBoundingBox;\n}();\n\nexport { AxisAlignedBoundingBox as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { Vector3, Matrix4 } from '@math.gl/core';\nimport * as mat4 from 'gl-matrix/mat4';\nimport { INTERSECTION } from '../constants';\nvar scratchVector = new Vector3();\nvar scratchVector2 = new Vector3();\n\nvar BoundingSphere = function () {\n  function BoundingSphere() {\n    var center = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 0];\n    var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n\n    _classCallCheck(this, BoundingSphere);\n\n    this.radius = -0;\n    this.center = new Vector3();\n    this.fromCenterRadius(center, radius);\n  }\n\n  _createClass(BoundingSphere, [{\n    key: \"fromCenterRadius\",\n    value: function fromCenterRadius(center, radius) {\n      this.center.from(center);\n      this.radius = radius;\n      return this;\n    }\n  }, {\n    key: \"fromCornerPoints\",\n    value: function fromCornerPoints(corner, oppositeCorner) {\n      oppositeCorner = scratchVector.from(oppositeCorner);\n      this.center = new Vector3().from(corner).add(oppositeCorner).scale(0.5);\n      this.radius = this.center.distance(oppositeCorner);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(right) {\n      return this === right || Boolean(right) && this.center.equals(right.center) && this.radius === right.radius;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new BoundingSphere(this.center, this.radius);\n    }\n  }, {\n    key: \"union\",\n    value: function union(boundingSphere) {\n      var leftCenter = this.center;\n      var leftRadius = this.radius;\n      var rightCenter = boundingSphere.center;\n      var rightRadius = boundingSphere.radius;\n      var toRightCenter = scratchVector.copy(rightCenter).subtract(leftCenter);\n      var centerSeparation = toRightCenter.magnitude();\n\n      if (leftRadius >= centerSeparation + rightRadius) {\n        return this.clone();\n      }\n\n      if (rightRadius >= centerSeparation + leftRadius) {\n        return boundingSphere.clone();\n      }\n\n      var halfDistanceBetweenTangentPoints = (leftRadius + centerSeparation + rightRadius) * 0.5;\n      scratchVector2.copy(toRightCenter).scale((-leftRadius + halfDistanceBetweenTangentPoints) / centerSeparation).add(leftCenter);\n      this.center.copy(scratchVector2);\n      this.radius = halfDistanceBetweenTangentPoints;\n      return this;\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(point) {\n      point = scratchVector.from(point);\n      var radius = point.subtract(this.center).magnitude();\n\n      if (radius > this.radius) {\n        this.radius = radius;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"intersectPlane\",\n    value: function intersectPlane(plane) {\n      var center = this.center;\n      var radius = this.radius;\n      var normal = plane.normal;\n      var distanceToPlane = normal.dot(center) + plane.distance;\n\n      if (distanceToPlane < -radius) {\n        return INTERSECTION.OUTSIDE;\n      }\n\n      if (distanceToPlane < radius) {\n        return INTERSECTION.INTERSECTING;\n      }\n\n      return INTERSECTION.INSIDE;\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(_transform) {\n      this.center.transform(_transform);\n      var scale = mat4.getScaling(scratchVector, _transform);\n      this.radius = Math.max(scale[0], Math.max(scale[1], scale[2])) * this.radius;\n      return this;\n    }\n  }, {\n    key: \"distanceSquaredTo\",\n    value: function distanceSquaredTo(point) {\n      point = scratchVector.from(point);\n      var delta = point.subtract(this.center);\n      return delta.lengthSquared() - this.radius * this.radius;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(point) {\n      return Math.sqrt(this.distanceSquaredTo(point));\n    }\n  }]);\n\n  return BoundingSphere;\n}();\n\nexport { BoundingSphere as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { Vector3, Matrix3 } from '@math.gl/core';\nimport BoundingSphere from './bounding-sphere';\nimport { INTERSECTION } from '../constants';\nvar scratchVector = new Vector3();\nvar scratchOffset = new Vector3();\nvar scratchVectorU = new Vector3();\nvar scratchVectorV = new Vector3();\nvar scratchVectorW = new Vector3();\nvar scratchCorner = new Vector3();\nvar scratchToCenter = new Vector3();\nvar fromOrientedBoundingBoxScratchU = new Vector3();\nvar fromOrientedBoundingBoxScratchV = new Vector3();\nvar fromOrientedBoundingBoxScratchW = new Vector3();\nvar MATRIX3 = {\n  COLUMN0ROW0: 0,\n  COLUMN0ROW1: 1,\n  COLUMN0ROW2: 2,\n  COLUMN1ROW0: 3,\n  COLUMN1ROW1: 4,\n  COLUMN1ROW2: 5,\n  COLUMN2ROW0: 6,\n  COLUMN2ROW1: 7,\n  COLUMN2ROW2: 8\n};\n\nvar OrientedBoundingBox = function () {\n  function OrientedBoundingBox() {\n    var center = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 0];\n    var halfAxes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n    _classCallCheck(this, OrientedBoundingBox);\n\n    this.center = new Vector3().from(center);\n    this.halfAxes = new Matrix3(halfAxes);\n  }\n\n  _createClass(OrientedBoundingBox, [{\n    key: \"clone\",\n    value: function clone() {\n      return new OrientedBoundingBox(this.center, this.halfAxes);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(right) {\n      return this === right || Boolean(right) && this.center.equals(right.center) && this.halfAxes.equals(right.halfAxes);\n    }\n  }, {\n    key: \"getBoundingSphere\",\n    value: function getBoundingSphere() {\n      var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BoundingSphere();\n      var halfAxes = this.halfAxes;\n      var u = halfAxes.getColumn(0, fromOrientedBoundingBoxScratchU);\n      var v = halfAxes.getColumn(1, fromOrientedBoundingBoxScratchV);\n      var w = halfAxes.getColumn(2, fromOrientedBoundingBoxScratchW);\n      var cornerVector = scratchVector.copy(u).add(v).add(w);\n      result.center.copy(this.center);\n      result.radius = cornerVector.magnitude();\n      return result;\n    }\n  }, {\n    key: \"intersectPlane\",\n    value: function intersectPlane(plane) {\n      var center = this.center;\n      var normal = plane.normal;\n      var halfAxes = this.halfAxes;\n      var normalX = normal.x;\n      var normalY = normal.y;\n      var normalZ = normal.z;\n      var radEffective = Math.abs(normalX * halfAxes[MATRIX3.COLUMN0ROW0] + normalY * halfAxes[MATRIX3.COLUMN0ROW1] + normalZ * halfAxes[MATRIX3.COLUMN0ROW2]) + Math.abs(normalX * halfAxes[MATRIX3.COLUMN1ROW0] + normalY * halfAxes[MATRIX3.COLUMN1ROW1] + normalZ * halfAxes[MATRIX3.COLUMN1ROW2]) + Math.abs(normalX * halfAxes[MATRIX3.COLUMN2ROW0] + normalY * halfAxes[MATRIX3.COLUMN2ROW1] + normalZ * halfAxes[MATRIX3.COLUMN2ROW2]);\n      var distanceToPlane = normal.dot(center) + plane.distance;\n\n      if (distanceToPlane <= -radEffective) {\n        return INTERSECTION.OUTSIDE;\n      } else if (distanceToPlane >= radEffective) {\n        return INTERSECTION.INSIDE;\n      }\n\n      return INTERSECTION.INTERSECTING;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(point) {\n      return Math.sqrt(this.distanceSquaredTo(point));\n    }\n  }, {\n    key: \"distanceSquaredTo\",\n    value: function distanceSquaredTo(point) {\n      var offset = scratchOffset.from(point).subtract(this.center);\n      var halfAxes = this.halfAxes;\n      var u = halfAxes.getColumn(0, scratchVectorU);\n      var v = halfAxes.getColumn(1, scratchVectorV);\n      var w = halfAxes.getColumn(2, scratchVectorW);\n      var uHalf = u.magnitude();\n      var vHalf = v.magnitude();\n      var wHalf = w.magnitude();\n      u.normalize();\n      v.normalize();\n      w.normalize();\n      var distanceSquared = 0.0;\n      var d;\n      d = Math.abs(offset.dot(u)) - uHalf;\n\n      if (d > 0) {\n        distanceSquared += d * d;\n      }\n\n      d = Math.abs(offset.dot(v)) - vHalf;\n\n      if (d > 0) {\n        distanceSquared += d * d;\n      }\n\n      d = Math.abs(offset.dot(w)) - wHalf;\n\n      if (d > 0) {\n        distanceSquared += d * d;\n      }\n\n      return distanceSquared;\n    }\n  }, {\n    key: \"computePlaneDistances\",\n    value: function computePlaneDistances(position, direction) {\n      var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [-0, -0];\n      var minDist = Number.POSITIVE_INFINITY;\n      var maxDist = Number.NEGATIVE_INFINITY;\n      var center = this.center;\n      var halfAxes = this.halfAxes;\n      var u = halfAxes.getColumn(0, scratchVectorU);\n      var v = halfAxes.getColumn(1, scratchVectorV);\n      var w = halfAxes.getColumn(2, scratchVectorW);\n      var corner = scratchCorner.copy(u).add(v).add(w).add(center);\n      var toCenter = scratchToCenter.copy(corner).subtract(position);\n      var mag = direction.dot(toCenter);\n      minDist = Math.min(mag, minDist);\n      maxDist = Math.max(mag, maxDist);\n      corner.copy(center).add(u).add(v).subtract(w);\n      toCenter.copy(corner).subtract(position);\n      mag = direction.dot(toCenter);\n      minDist = Math.min(mag, minDist);\n      maxDist = Math.max(mag, maxDist);\n      corner.copy(center).add(u).subtract(v).add(w);\n      toCenter.copy(corner).subtract(position);\n      mag = direction.dot(toCenter);\n      minDist = Math.min(mag, minDist);\n      maxDist = Math.max(mag, maxDist);\n      corner.copy(center).add(u).subtract(v).subtract(w);\n      toCenter.copy(corner).subtract(position);\n      mag = direction.dot(toCenter);\n      minDist = Math.min(mag, minDist);\n      maxDist = Math.max(mag, maxDist);\n      center.copy(corner).subtract(u).add(v).add(w);\n      toCenter.copy(corner).subtract(position);\n      mag = direction.dot(toCenter);\n      minDist = Math.min(mag, minDist);\n      maxDist = Math.max(mag, maxDist);\n      center.copy(corner).subtract(u).add(v).subtract(w);\n      toCenter.copy(corner).subtract(position);\n      mag = direction.dot(toCenter);\n      minDist = Math.min(mag, minDist);\n      maxDist = Math.max(mag, maxDist);\n      center.copy(corner).subtract(u).subtract(v).add(w);\n      toCenter.copy(corner).subtract(position);\n      mag = direction.dot(toCenter);\n      minDist = Math.min(mag, minDist);\n      maxDist = Math.max(mag, maxDist);\n      center.copy(corner).subtract(u).subtract(v).subtract(w);\n      toCenter.copy(corner).subtract(position);\n      mag = direction.dot(toCenter);\n      minDist = Math.min(mag, minDist);\n      maxDist = Math.max(mag, maxDist);\n      result[0] = minDist;\n      result[1] = maxDist;\n      return result;\n    }\n  }, {\n    key: \"getTransform\",\n    value: function getTransform() {}\n  }]);\n\n  return OrientedBoundingBox;\n}();\n\nexport { OrientedBoundingBox as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { Vector3, equals as _equals, assert } from '@math.gl/core';\nvar scratchPosition = new Vector3();\nvar scratchNormal = new Vector3();\n\nvar Plane = function () {\n  function Plane() {\n    var normal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 1];\n    var distance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Plane);\n\n    this.normal = new Vector3();\n    this.distance = -0;\n    this.fromNormalDistance(normal, distance);\n  }\n\n  _createClass(Plane, [{\n    key: \"fromNormalDistance\",\n    value: function fromNormalDistance(normal, distance) {\n      assert(Number.isFinite(distance));\n      this.normal.from(normal).normalize();\n      this.distance = distance;\n      return this;\n    }\n  }, {\n    key: \"fromPointNormal\",\n    value: function fromPointNormal(point, normal) {\n      point = scratchPosition.from(point);\n      this.normal.from(normal).normalize();\n      var distance = -this.normal.dot(point);\n      this.distance = distance;\n      return this;\n    }\n  }, {\n    key: \"fromCoefficients\",\n    value: function fromCoefficients(a, b, c, d) {\n      this.normal.set(a, b, c);\n      assert(_equals(this.normal.len(), 1));\n      this.distance = d;\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(plane) {\n      return new Plane(this.normal, this.distance);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(right) {\n      return _equals(this.distance, right.distance) && _equals(this.normal, right.normal);\n    }\n  }, {\n    key: \"getPointDistance\",\n    value: function getPointDistance(point) {\n      return this.normal.dot(point) + this.distance;\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      var normal = scratchNormal.copy(this.normal).transformAsVector(matrix4).normalize();\n      var point = this.normal.scale(-this.distance).transform(matrix4);\n      return this.fromPointNormal(point, normal);\n    }\n  }, {\n    key: \"projectPointOntoPlane\",\n    value: function projectPointOntoPlane(point) {\n      var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0];\n      point = scratchPosition.from(point);\n      var pointDistance = this.getPointDistance(point);\n      var scaledNormal = scratchNormal.copy(this.normal).scale(pointDistance);\n      return point.subtract(scaledNormal).to(result);\n    }\n  }]);\n\n  return Plane;\n}();\n\nexport { Plane as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { Vector3, Vector4, assert } from '@math.gl/core';\nimport { INTERSECTION } from '../constants';\nimport Plane from './plane';\nvar faces = [new Vector3([1, 0, 0]), new Vector3([0, 1, 0]), new Vector3([0, 0, 1])];\nvar scratchPlaneCenter = new Vector3();\nvar scratchPlaneNormal = new Vector3();\nvar scratchPlane = new Plane(new Vector3(1.0, 0.0, 0.0), 0.0);\n\nvar CullingVolume = function () {\n  _createClass(CullingVolume, null, [{\n    key: \"MASK_OUTSIDE\",\n    get: function get() {\n      return 0xffffffff;\n    }\n  }, {\n    key: \"MASK_INSIDE\",\n    get: function get() {\n      return 0x00000000;\n    }\n  }, {\n    key: \"MASK_INDETERMINATE\",\n    get: function get() {\n      return 0x7fffffff;\n    }\n  }]);\n\n  function CullingVolume() {\n    var planes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, CullingVolume);\n\n    this.planes = planes;\n    assert(this.planes.every(function (plane) {\n      return plane instanceof Plane;\n    }));\n  }\n\n  _createClass(CullingVolume, [{\n    key: \"fromBoundingSphere\",\n    value: function fromBoundingSphere(boundingSphere) {\n      this.planes.length = 2 * faces.length;\n      var center = boundingSphere.center;\n      var radius = boundingSphere.radius;\n      var planeIndex = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = faces[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var faceNormal = _step.value;\n          var plane0 = this.planes[planeIndex];\n          var plane1 = this.planes[planeIndex + 1];\n\n          if (!plane0) {\n            plane0 = this.planes[planeIndex] = new Plane();\n          }\n\n          if (!plane1) {\n            plane1 = this.planes[planeIndex + 1] = new Plane();\n          }\n\n          var plane0Center = scratchPlaneCenter.copy(faceNormal).scale(-radius).add(center);\n          var plane0Distance = -faceNormal.dot(plane0Center);\n          plane0.fromPointNormal(plane0Center, faceNormal);\n          var plane1Center = scratchPlaneCenter.copy(faceNormal).scale(radius).add(center);\n          var negatedFaceNormal = scratchPlaneNormal.copy(faceNormal).negate();\n          var plane1Distance = -negatedFaceNormal.dot(plane1Center);\n          plane1.fromPointNormal(plane1Center, negatedFaceNormal);\n          planeIndex += 2;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"computeVisibility\",\n    value: function computeVisibility(boundingVolume) {\n      assert(boundingVolume);\n      var intersect = INTERSECTION.INSIDE;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.planes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var plane = _step2.value;\n          var result = boundingVolume.intersectPlane(plane);\n\n          switch (result) {\n            case INTERSECTION.OUTSIDE:\n              return INTERSECTION.OUTSIDE;\n\n            case INTERSECTION.INTERSECTING:\n              intersect = INTERSECTION.INTERSECTING;\n              break;\n\n            default:\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return intersect;\n    }\n  }, {\n    key: \"computeVisibilityWithPlaneMask\",\n    value: function computeVisibilityWithPlaneMask(boundingVolume, parentPlaneMask) {\n      assert(boundingVolume, 'boundingVolume is required.');\n      assert(Number.isFinite(parentPlaneMask), 'parentPlaneMask is required.');\n\n      if (parentPlaneMask === CullingVolume.MASK_OUTSIDE || parentPlaneMask === CullingVolume.MASK_INSIDE) {\n        return parentPlaneMask;\n      }\n\n      var mask = CullingVolume.MASK_INSIDE;\n      var planes = this.planes;\n\n      for (var k = 0; k < this.planes.length; ++k) {\n        var flag = k < 31 ? 1 << k : 0;\n\n        if (k < 31 && (parentPlaneMask & flag) === 0) {\n          continue;\n        }\n\n        var plane = planes[k];\n        var result = boundingVolume.intersectPlane(plane);\n\n        if (result === INTERSECTION.OUTSIDE) {\n          return CullingVolume.MASK_OUTSIDE;\n        } else if (result === INTERSECTION.INTERSECTING) {\n          mask |= flag;\n        }\n      }\n\n      return mask;\n    }\n  }]);\n\n  return CullingVolume;\n}();\n\nexport { CullingVolume as default };","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { Vector3, Matrix4, assert } from '@math.gl/core';\nimport CullingVolume from './culling-volume';\nimport Plane from './plane';\nvar scratchPlaneUpVector = new Vector3();\nvar scratchPlaneRightVector = new Vector3();\nvar scratchPlaneNearCenter = new Vector3();\nvar scratchPlaneFarCenter = new Vector3();\nvar scratchPlaneNormal = new Vector3();\n\nvar PerspectiveOffCenterFrustum = function () {\n  function PerspectiveOffCenterFrustum() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, PerspectiveOffCenterFrustum);\n\n    options = _objectSpread({\n      near: 1.0,\n      far: 500000000.0\n    }, options);\n    this.left = options.left;\n    this._left = undefined;\n    this.right = options.right;\n    this._right = undefined;\n    this.top = options.top;\n    this._top = undefined;\n    this.bottom = options.bottom;\n    this._bottom = undefined;\n    this.near = options.near;\n    this._near = this.near;\n    this.far = options.far;\n    this._far = this.far;\n    this._cullingVolume = new CullingVolume([new Plane(), new Plane(), new Plane(), new Plane(), new Plane(), new Plane()]);\n    this._perspectiveMatrix = new Matrix4();\n    this._infinitePerspective = new Matrix4();\n  }\n\n  _createClass(PerspectiveOffCenterFrustum, [{\n    key: \"clone\",\n    value: function clone() {\n      return new PerspectiveOffCenterFrustum({\n        right: this.right,\n        left: this.left,\n        top: this.top,\n        bottom: this.bottom,\n        near: this.near,\n        far: this.far\n      });\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return other && other instanceof PerspectiveOffCenterFrustum && this.right === other.right && this.left === other.left && this.top === other.top && this.bottom === other.bottom && this.near === other.near && this.far === other.far;\n    }\n  }, {\n    key: \"computeCullingVolume\",\n    value: function computeCullingVolume(position, direction, up) {\n      assert(position, 'position is required.');\n      assert(direction, 'direction is required.');\n      assert(up, 'up is required.');\n      var planes = this._cullingVolume.planes;\n      up = scratchPlaneUpVector.copy(up).normalize();\n      var right = scratchPlaneRightVector.copy(direction).cross(up).normalize();\n      var nearCenter = scratchPlaneNearCenter.copy(direction).multiplyByScalar(this.near).add(position);\n      var farCenter = scratchPlaneFarCenter.copy(direction).multiplyByScalar(this.far).add(position);\n      var normal = scratchPlaneNormal;\n      normal.copy(right).multiplyByScalar(this.left).add(nearCenter).subtract(position).cross(up);\n      planes[0].fromPointNormal(position, normal);\n      normal.copy(right).multiplyByScalar(this.right).add(nearCenter).subtract(position).cross(up).negate();\n      planes[1].fromPointNormal(position, normal);\n      normal.copy(up).multiplyByScalar(this.bottom).add(nearCenter).subtract(position).cross(right).negate();\n      planes[2].fromPointNormal(position, normal);\n      normal.copy(up).multiplyByScalar(this.top).add(nearCenter).subtract(position).cross(right);\n      planes[3].fromPointNormal(position, normal);\n      normal = new Vector3().copy(direction);\n      planes[4].fromPointNormal(nearCenter, normal);\n      normal.negate();\n      planes[5].fromPointNormal(farCenter, normal);\n      return this._cullingVolume;\n    }\n  }, {\n    key: \"getPixelDimensions\",\n    value: function getPixelDimensions(drawingBufferWidth, drawingBufferHeight, distance, result) {\n      update(this);\n      assert(Number.isFinite(drawingBufferWidth) && Number.isFinite(drawingBufferHeight));\n      assert(drawingBufferWidth > 0);\n      assert(drawingBufferHeight > 0);\n      assert(distance > 0);\n      assert(result);\n      var inverseNear = 1.0 / this.near;\n      var tanTheta = this.top * inverseNear;\n      var pixelHeight = 2.0 * distance * tanTheta / drawingBufferHeight;\n      tanTheta = this.right * inverseNear;\n      var pixelWidth = 2.0 * distance * tanTheta / drawingBufferWidth;\n      result.x = pixelWidth;\n      result.y = pixelHeight;\n      return result;\n    }\n  }, {\n    key: \"projectionMatrix\",\n    get: function get() {\n      update(this);\n      return this._perspectiveMatrix;\n    }\n  }, {\n    key: \"infiniteProjectionMatrix\",\n    get: function get() {\n      update(this);\n      return this._infinitePerspective;\n    }\n  }]);\n\n  return PerspectiveOffCenterFrustum;\n}();\n\nexport { PerspectiveOffCenterFrustum as default };\n\nfunction update(frustum) {\n  assert(Number.isFinite(frustum.right) && Number.isFinite(frustum.left) && Number.isFinite(frustum.top) && Number.isFinite(frustum.bottom) && Number.isFinite(frustum.near) && Number.isFinite(frustum.far));\n  var top = frustum.top,\n      bottom = frustum.bottom,\n      right = frustum.right,\n      left = frustum.left,\n      near = frustum.near,\n      far = frustum.far;\n\n  if (top !== frustum._top || bottom !== frustum._bottom || left !== frustum._left || right !== frustum._right || near !== frustum._near || far !== frustum._far) {\n    assert(frustum.near > 0 && frustum.near < frustum.far, 'near must be greater than zero and less than far.');\n    frustum._left = left;\n    frustum._right = right;\n    frustum._top = top;\n    frustum._bottom = bottom;\n    frustum._near = near;\n    frustum._far = far;\n    frustum._perspectiveMatrix = new Matrix4().frustum({\n      left: left,\n      right: right,\n      bottom: bottom,\n      top: top,\n      near: near,\n      far: far\n    });\n    frustum._infinitePerspective = new Matrix4().frustum({\n      left: left,\n      right: right,\n      bottom: bottom,\n      top: top,\n      near: near,\n      far: Infinity\n    });\n  }\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { assert } from '@math.gl/core';\nimport PerspectiveOffCenterFrustum from './perspective-off-center-frustum';\n\nvar defined = function defined(val) {\n  return val !== null && typeof val !== 'undefined';\n};\n\nvar PerspectiveFrustum = function () {\n  function PerspectiveFrustum() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, PerspectiveFrustum);\n\n    options = _objectSpread({\n      near: 1.0,\n      far: 500000000.0,\n      xOffset: 0.0,\n      yOffset: 0.0\n    }, options);\n    this._offCenterFrustum = new PerspectiveOffCenterFrustum();\n    this.fov = options.fov;\n    this._fov = undefined;\n    this._fovy = undefined;\n    this._sseDenominator = undefined;\n    this.aspectRatio = options.aspectRatio;\n    this._aspectRatio = undefined;\n    this.near = options.near;\n    this._near = this.near;\n    this.far = options.far;\n    this._far = this.far;\n    this.xOffset = options.xOffset;\n    this._xOffset = this.xOffset;\n    this.yOffset = options.yOffset;\n    this._yOffset = this.yOffset;\n  }\n\n  _createClass(PerspectiveFrustum, [{\n    key: \"clone\",\n    value: function clone() {\n      return new PerspectiveFrustum({\n        aspectRatio: this.aspectRatio,\n        fov: this.fov,\n        near: this.near,\n        far: this.far\n      });\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (!defined(other) || !(other instanceof PerspectiveFrustum)) {\n        return false;\n      }\n\n      update(this);\n      update(other);\n      return this.fov === other.fov && this.aspectRatio === other.aspectRatio && this.near === other.near && this.far === other.far && this._offCenterFrustum.equals(other._offCenterFrustum);\n    }\n  }, {\n    key: \"computeCullingVolume\",\n    value: function computeCullingVolume(position, direction, up) {\n      update(this);\n      return this._offCenterFrustum.computeCullingVolume(position, direction, up);\n    }\n  }, {\n    key: \"getPixelDimensions\",\n    value: function getPixelDimensions(drawingBufferWidth, drawingBufferHeight, distance, result) {\n      update(this);\n      return this._offCenterFrustum.getPixelDimensions(drawingBufferWidth, drawingBufferHeight, distance, result);\n    }\n  }, {\n    key: \"projectionMatrix\",\n    get: function get() {\n      update(this);\n      return this._offCenterFrustum.projectionMatrix;\n    }\n  }, {\n    key: \"infiniteProjectionMatrix\",\n    get: function get() {\n      update(this);\n      return this._offCenterFrustum.infiniteProjectionMatrix;\n    }\n  }, {\n    key: \"fovy\",\n    get: function get() {\n      update(this);\n      return this._fovy;\n    }\n  }, {\n    key: \"sseDenominator\",\n    get: function get() {\n      update(this);\n      return this._sseDenominator;\n    }\n  }]);\n\n  return PerspectiveFrustum;\n}();\n\nexport { PerspectiveFrustum as default };\n\nfunction update(frustum) {\n  assert(Number.isFinite(frustum.fov) && Number.isFinite(frustum.aspectRatio) && Number.isFinite(frustum.near) && Number.isFinite(frustum.far));\n  var f = frustum._offCenterFrustum;\n\n  if (frustum.fov !== frustum._fov || frustum.aspectRatio !== frustum._aspectRatio || frustum.near !== frustum._near || frustum.far !== frustum._far || frustum.xOffset !== frustum._xOffset || frustum.yOffset !== frustum._yOffset) {\n    assert(frustum.fov >= 0 && frustum.fov < Math.PI);\n    assert(frustum.aspectRatio > 0);\n    assert(frustum.near >= 0 && frustum.near < frustum.far);\n    frustum._aspectRatio = frustum.aspectRatio;\n    frustum._fov = frustum.fov;\n    frustum._fovy = frustum.aspectRatio <= 1 ? frustum.fov : Math.atan(Math.tan(frustum.fov * 0.5) / frustum.aspectRatio) * 2.0;\n    frustum._near = frustum.near;\n    frustum._far = frustum.far;\n    frustum._sseDenominator = 2.0 * Math.tan(0.5 * frustum._fovy);\n    frustum._xOffset = frustum.xOffset;\n    frustum._yOffset = frustum.yOffset;\n    f.top = frustum.near * Math.tan(0.5 * frustum._fovy);\n    f.bottom = -f.top;\n    f.right = frustum.aspectRatio * f.top;\n    f.left = -f.right;\n    f.near = frustum.near;\n    f.far = frustum.far;\n    f.right += frustum.xOffset;\n    f.left += frustum.xOffset;\n    f.top += frustum.yOffset;\n    f.bottom += frustum.yOffset;\n  }\n}","import { Vector3 } from '@math.gl/core';\nimport BoundingSphere from '../lib/bounding-sphere';\nvar fromPointsXMin = new Vector3();\nvar fromPointsYMin = new Vector3();\nvar fromPointsZMin = new Vector3();\nvar fromPointsXMax = new Vector3();\nvar fromPointsYMax = new Vector3();\nvar fromPointsZMax = new Vector3();\nvar fromPointsCurrentPos = new Vector3();\nvar fromPointsScratch = new Vector3();\nvar fromPointsRitterCenter = new Vector3();\nvar fromPointsMinBoxPt = new Vector3();\nvar fromPointsMaxBoxPt = new Vector3();\nvar fromPointsNaiveCenterScratch = new Vector3();\nvar volumeConstant = 4.0 / 3.0 * Math.PI;\nexport default function makeBoundingSphereFromPoints(positions) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new BoundingSphere();\n\n  if (!positions || positions.length === 0) {\n    return result.fromCenterRadius([0, 0, 0], 0);\n  }\n\n  var currentPos = fromPointsCurrentPos.copy(positions[0]);\n  var xMin = fromPointsXMin.copy(currentPos);\n  var yMin = fromPointsYMin.copy(currentPos);\n  var zMin = fromPointsZMin.copy(currentPos);\n  var xMax = fromPointsXMax.copy(currentPos);\n  var yMax = fromPointsYMax.copy(currentPos);\n  var zMax = fromPointsZMax.copy(currentPos);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = positions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var position = _step.value;\n      currentPos.copy(position);\n      var x = currentPos.x;\n      var y = currentPos.y;\n      var z = currentPos.z;\n\n      if (x < xMin.x) {\n        currentPos.copy(xMin);\n      }\n\n      if (x > xMax.x) {\n        currentPos.copy(xMax);\n      }\n\n      if (y < yMin.y) {\n        currentPos.copy(yMin);\n      }\n\n      if (y > yMax.y) {\n        currentPos.copy(yMax);\n      }\n\n      if (z < zMin.z) {\n        currentPos.copy(zMin);\n      }\n\n      if (z > zMax.z) {\n        currentPos.copy(zMax);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var xSpan = fromPointsScratch.copy(xMax).subtract(xMin).magnitudeSquared();\n  var ySpan = fromPointsScratch.copy(yMax).subtract(yMin).magnitudeSquared();\n  var zSpan = fromPointsScratch.copy(zMax).subtract(zMin).magnitudeSquared();\n  var diameter1 = xMin;\n  var diameter2 = xMax;\n  var maxSpan = xSpan;\n\n  if (ySpan > maxSpan) {\n    maxSpan = ySpan;\n    diameter1 = yMin;\n    diameter2 = yMax;\n  }\n\n  if (zSpan > maxSpan) {\n    maxSpan = zSpan;\n    diameter1 = zMin;\n    diameter2 = zMax;\n  }\n\n  var ritterCenter = fromPointsRitterCenter;\n  ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n  ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n  ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n  var radiusSquared = fromPointsScratch.copy(diameter2).subtract(ritterCenter).magnitudeSquared();\n  var ritterRadius = Math.sqrt(radiusSquared);\n  var minBoxPt = fromPointsMinBoxPt;\n  minBoxPt.x = xMin.x;\n  minBoxPt.y = yMin.y;\n  minBoxPt.z = zMin.z;\n  var maxBoxPt = fromPointsMaxBoxPt;\n  maxBoxPt.x = xMax.x;\n  maxBoxPt.y = yMax.y;\n  maxBoxPt.z = zMax.z;\n  var naiveCenter = fromPointsNaiveCenterScratch.copy(minBoxPt).add(maxBoxPt).multiplyByScalar(0.5);\n  var naiveRadius = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = positions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _position = _step2.value;\n      currentPos.copy(_position);\n      var r = fromPointsScratch.copy(currentPos).subtract(naiveCenter).magnitude();\n\n      if (r > naiveRadius) {\n        naiveRadius = r;\n      }\n\n      var oldCenterToPointSquared = fromPointsScratch.copy(currentPos).subtract(ritterCenter).magnitudeSquared();\n\n      if (oldCenterToPointSquared > radiusSquared) {\n        var oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n        ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n        radiusSquared = ritterRadius * ritterRadius;\n        var oldToNew = oldCenterToPoint - ritterRadius;\n        ritterCenter.x = (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) / oldCenterToPoint;\n        ritterCenter.y = (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) / oldCenterToPoint;\n        ritterCenter.z = (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) / oldCenterToPoint;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  if (ritterRadius < naiveRadius) {\n    ritterCenter.to(result.center);\n    result.radius = ritterRadius;\n  } else {\n    naiveCenter.to(result.center);\n    result.radius = naiveRadius;\n  }\n\n  return result;\n}","import { Matrix3, _MathUtils } from '@math.gl/core';\nvar scratchMatrix = new Matrix3();\nvar scratchUnitary = new Matrix3();\nvar scratchDiagonal = new Matrix3();\nvar jMatrix = new Matrix3();\nvar jMatrixTranspose = new Matrix3();\nexport default function computeEigenDecomposition(matrix) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var EIGEN_TOLERANCE = _MathUtils.EPSILON20;\n  var EIGEN_MAX_SWEEPS = 10;\n  var count = 0;\n  var sweep = 0;\n  var unitaryMatrix = scratchUnitary;\n  var diagonalMatrix = scratchDiagonal;\n  unitaryMatrix.identity();\n  diagonalMatrix.copy(matrix);\n  var epsilon = EIGEN_TOLERANCE * computeFrobeniusNorm(diagonalMatrix);\n\n  while (sweep < EIGEN_MAX_SWEEPS && offDiagonalFrobeniusNorm(diagonalMatrix) > epsilon) {\n    shurDecomposition(diagonalMatrix, jMatrix);\n    jMatrixTranspose.copy(jMatrix).transpose();\n    diagonalMatrix.multiplyRight(jMatrix);\n    diagonalMatrix.multiplyLeft(jMatrixTranspose);\n    unitaryMatrix.multiplyRight(jMatrix);\n\n    if (++count > 2) {\n      ++sweep;\n      count = 0;\n    }\n  }\n\n  result.unitary = unitaryMatrix.toTarget(result.unitary);\n  result.diagonal = diagonalMatrix.toTarget(result.diagonal);\n  return result;\n}\n\nfunction computeFrobeniusNorm(matrix) {\n  var norm = 0.0;\n\n  for (var i = 0; i < 9; ++i) {\n    var temp = matrix[i];\n    norm += temp * temp;\n  }\n\n  return Math.sqrt(norm);\n}\n\nvar rowVal = [1, 0, 0];\nvar colVal = [2, 2, 1];\n\nfunction offDiagonalFrobeniusNorm(matrix) {\n  var norm = 0.0;\n\n  for (var i = 0; i < 3; ++i) {\n    var temp = matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])];\n    norm += 2.0 * temp * temp;\n  }\n\n  return Math.sqrt(norm);\n}\n\nfunction shurDecomposition(matrix, result) {\n  var tolerance = _MathUtils.EPSILON15;\n  var maxDiagonal = 0.0;\n  var rotAxis = 1;\n\n  for (var i = 0; i < 3; ++i) {\n    var temp = Math.abs(matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])]);\n\n    if (temp > maxDiagonal) {\n      rotAxis = i;\n      maxDiagonal = temp;\n    }\n  }\n\n  var p = rowVal[rotAxis];\n  var q = colVal[rotAxis];\n  var c = 1.0;\n  var s = 0.0;\n\n  if (Math.abs(matrix[scratchMatrix.getElementIndex(q, p)]) > tolerance) {\n    var qq = matrix[scratchMatrix.getElementIndex(q, q)];\n    var pp = matrix[scratchMatrix.getElementIndex(p, p)];\n    var qp = matrix[scratchMatrix.getElementIndex(q, p)];\n    var tau = (qq - pp) / 2.0 / qp;\n    var t;\n\n    if (tau < 0.0) {\n      t = -1.0 / (-tau + Math.sqrt(1.0 + tau * tau));\n    } else {\n      t = 1.0 / (tau + Math.sqrt(1.0 + tau * tau));\n    }\n\n    c = 1.0 / Math.sqrt(1.0 + t * t);\n    s = t * c;\n  }\n\n  Matrix3.IDENTITY.to(result);\n  result[scratchMatrix.getElementIndex(p, p)] = result[scratchMatrix.getElementIndex(q, q)] = c;\n  result[scratchMatrix.getElementIndex(q, p)] = s;\n  result[scratchMatrix.getElementIndex(p, q)] = -s;\n  return result;\n}","import { Vector3, Matrix3 } from '@math.gl/core';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\nimport OrientedBoundingBox from '../lib/oriented-bounding-box';\nimport AxisAlignedBoundingBox from '../lib/axis-aligned-bounding-box';\nvar scratchVector2 = new Vector3();\nvar scratchVector3 = new Vector3();\nvar scratchVector4 = new Vector3();\nvar scratchVector5 = new Vector3();\nvar scratchVector6 = new Vector3();\nvar scratchCovarianceResult = new Matrix3();\nvar scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\nexport function makeOrientedBoundingBoxFromPoints(positions) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new OrientedBoundingBox();\n\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n\n  var length = positions.length;\n  var meanPoint = new Vector3(0, 0, 0);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = positions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var position = _step.value;\n      meanPoint.add(position);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n  var exx = 0.0;\n  var exy = 0.0;\n  var exz = 0.0;\n  var eyy = 0.0;\n  var eyz = 0.0;\n  var ezz = 0.0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = positions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _position = _step2.value;\n      var p = scratchVector2.copy(_position).subtract(meanPoint);\n      exx += p.x * p.x;\n      exy += p.x * p.y;\n      exz += p.x * p.z;\n      eyy += p.y * p.y;\n      eyz += p.y * p.z;\n      ezz += p.z * p.z;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n  var covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n\n  var _computeEigenDecompos = computeEigenDecomposition(covarianceMatrix, scratchEigenResult),\n      unitary = _computeEigenDecompos.unitary;\n\n  var rotation = result.halfAxes.copy(unitary);\n  var v1 = rotation.getColumn(0, scratchVector4);\n  var v2 = rotation.getColumn(1, scratchVector5);\n  var v3 = rotation.getColumn(2, scratchVector6);\n  var u1 = -Number.MAX_VALUE;\n  var u2 = -Number.MAX_VALUE;\n  var u3 = -Number.MAX_VALUE;\n  var l1 = Number.MAX_VALUE;\n  var l2 = Number.MAX_VALUE;\n  var l3 = Number.MAX_VALUE;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = positions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var _position2 = _step3.value;\n      u1 = Math.max(_position2.dot(v1), u1);\n      u2 = Math.max(_position2.dot(v2), u2);\n      u3 = Math.max(_position2.dot(v3), u3);\n      l1 = Math.min(_position2.dot(v1), l1);\n      l2 = Math.min(_position2.dot(v2), l2);\n      l3 = Math.min(_position2.dot(v3), l3);\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n        _iterator3[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n  result.center.copy(v1).add(v2).add(v3);\n  var scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  result.halfAxes.multiplyByScalar(scale);\n  return result;\n}\nexport function makeAxisAlignedBoundingBoxFromPoints(positions) {\n  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new AxisAlignedBoundingBox();\n\n  if (!positions || positions.length === 0) {\n    result.minimum.set(0, 0, 0);\n    result.maximum.set(0, 0, 0);\n    result.center.set(0, 0, 0);\n    result.halfDiagonal.set(0, 0, 0);\n    return result;\n  }\n\n  var minimumX = positions[0][0];\n  var minimumY = positions[0][1];\n  var minimumZ = positions[0][2];\n  var maximumX = positions[0][0];\n  var maximumY = positions[0][1];\n  var maximumZ = positions[0][2];\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = positions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var p = _step4.value;\n      var x = p[0];\n      var y = p[1];\n      var z = p[2];\n      minimumX = Math.min(x, minimumX);\n      maximumX = Math.max(x, maximumX);\n      minimumY = Math.min(y, minimumY);\n      maximumY = Math.max(y, maximumY);\n      minimumZ = Math.min(z, minimumZ);\n      maximumZ = Math.max(z, maximumZ);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n        _iterator4[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  result.minimum.set(minimumX, minimumY, minimumZ);\n  result.maximum.set(maximumX, maximumY, maximumZ);\n  result.center.copy(result.minimum).add(result.maximum).scale(0.5);\n  result.halfDiagonal.copy(result.maximum).subtract(result.center);\n  return result;\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { Stats } from '@probe.gl/stats';\nvar STAT_QUEUED_REQUESTS = 'Queued Requests';\nvar STAT_ACTIVE_REQUESTS = 'Active Requests';\nvar STAT_CANCELLED_REQUESTS = 'Cancelled Requests';\nvar STAT_QUEUED_REQUESTS_EVER = 'Queued Requests Ever';\nvar STAT_ACTIVE_REQUESTS_EVER = 'Active Requests Ever';\nvar DEFAULT_PROPS = {\n  id: 'request-scheduler',\n  throttleRequests: true,\n  maxRequests: 6\n};\n\nvar RequestScheduler = function () {\n  function RequestScheduler() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, RequestScheduler);\n\n    this.props = _objectSpread(_objectSpread({}, DEFAULT_PROPS), props);\n    this.requestQueue = [];\n    this.activeRequestCount = 0;\n    this.requestMap = new Map();\n    this.stats = new Stats({\n      id: props.id\n    });\n    this.stats.get(STAT_QUEUED_REQUESTS);\n    this.stats.get(STAT_ACTIVE_REQUESTS);\n    this.stats.get(STAT_CANCELLED_REQUESTS);\n    this.stats.get(STAT_QUEUED_REQUESTS_EVER);\n    this.stats.get(STAT_ACTIVE_REQUESTS_EVER);\n    this._deferredUpdate = null;\n  }\n\n  _createClass(RequestScheduler, [{\n    key: \"scheduleRequest\",\n    value: function scheduleRequest(handle) {\n      var getPriority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n        return 0;\n      };\n\n      if (!this.props.throttleRequests) {\n        return Promise.resolve({\n          done: function done() {}\n        });\n      }\n\n      if (this.requestMap.has(handle)) {\n        return this.requestMap.get(handle);\n      }\n\n      var request = {\n        handle: handle,\n        getPriority: getPriority\n      };\n      var promise = new Promise(function (resolve) {\n        request.resolve = resolve;\n        return request;\n      });\n      this.requestQueue.push(request);\n      this.requestMap.set(handle, promise);\n\n      this._issueNewRequests();\n\n      return promise;\n    }\n  }, {\n    key: \"_issueRequest\",\n    value: function _issueRequest(request) {\n      var _this = this;\n\n      var handle = request.handle,\n          resolve = request.resolve;\n      var isDone = false;\n\n      var done = function done() {\n        if (!isDone) {\n          isDone = true;\n\n          _this.requestMap[\"delete\"](handle);\n\n          _this.activeRequestCount--;\n\n          _this._issueNewRequests();\n        }\n      };\n\n      this.activeRequestCount++;\n      return resolve ? resolve({\n        done: done\n      }) : Promise.resolve({\n        done: done\n      });\n    }\n  }, {\n    key: \"_issueNewRequests\",\n    value: function _issueNewRequests() {\n      var _this2 = this;\n\n      if (!this._deferredUpdate) {\n        this._deferredUpdate = setTimeout(function () {\n          return _this2._issueNewRequestsAsync();\n        }, 0);\n      }\n    }\n  }, {\n    key: \"_issueNewRequestsAsync\",\n    value: function _issueNewRequestsAsync() {\n      this._deferredUpdate = null;\n      var freeSlots = Math.max(this.props.maxRequests - this.activeRequestCount, 0);\n\n      if (freeSlots === 0) {\n        return;\n      }\n\n      this._updateAllRequests();\n\n      for (var i = 0; i < freeSlots; ++i) {\n        if (this.requestQueue.length > 0) {\n          var request = this.requestQueue.shift();\n\n          this._issueRequest(request);\n        }\n      }\n    }\n  }, {\n    key: \"_updateAllRequests\",\n    value: function _updateAllRequests() {\n      var requestQueue = this.requestQueue;\n\n      for (var i = 0; i < requestQueue.length; ++i) {\n        var request = requestQueue[i];\n\n        if (!this._updateRequest(request)) {\n          requestQueue.splice(i, 1);\n          this.requestMap[\"delete\"](request.handle);\n          i--;\n        }\n      }\n\n      requestQueue.sort(function (a, b) {\n        return a.priority - b.priority;\n      });\n    }\n  }, {\n    key: \"_updateRequest\",\n    value: function _updateRequest(request) {\n      request.priority = request.getPriority(request.handle);\n\n      if (request.priority < 0) {\n        request.resolve(null);\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return RequestScheduler;\n}();\n\nexport { RequestScheduler as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Matrix from './base/matrix';\nimport { checkVector, deprecated } from '../lib/validators';\nimport { vec4_transformMat3 } from '../lib/gl-matrix-extras';\nimport * as mat3 from 'gl-matrix/mat3';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nvar IDENTITY = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nvar ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL1ROW0: 3,\n  COL1ROW1: 4,\n  COL1ROW2: 5,\n  COL2ROW0: 6,\n  COL2ROW1: 7,\n  COL2ROW2: 8\n});\nvar constants = {};\n\nvar Matrix3 = function (_Matrix) {\n  _inherits(Matrix3, _Matrix);\n\n  _createClass(Matrix3, [{\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 9;\n    }\n  }, {\n    key: \"RANK\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"INDICES\",\n    get: function get() {\n      return INDICES;\n    }\n  }], [{\n    key: \"IDENTITY\",\n    get: function get() {\n      constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix3(IDENTITY));\n      return constants.IDENTITY;\n    }\n  }, {\n    key: \"ZERO\",\n    get: function get() {\n      constants.ZERO = constants.ZERO || Object.freeze(new Matrix3(ZERO));\n      return constants.ZERO;\n    }\n  }]);\n\n  function Matrix3(array) {\n    var _this;\n\n    _classCallCheck(this, Matrix3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Matrix3).call(this, -0, -0, -0, -0, -0, -0, -0, -0, -0));\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      _this.copy(array);\n    } else {\n      _this.identity();\n    }\n\n    return _this;\n  }\n\n  _createClass(Matrix3, [{\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      this[3] = array[3];\n      this[4] = array[4];\n      this[5] = array[5];\n      this[6] = array[6];\n      this[7] = array[7];\n      this[8] = array[8];\n      return this.check();\n    }\n  }, {\n    key: \"set\",\n    value: function set(m00, m10, m20, m01, m11, m21, m02, m12, m22) {\n      this[0] = m00;\n      this[1] = m10;\n      this[2] = m20;\n      this[3] = m01;\n      this[4] = m11;\n      this[5] = m21;\n      this[6] = m02;\n      this[7] = m12;\n      this[8] = m22;\n      return this.check();\n    }\n  }, {\n    key: \"setRowMajor\",\n    value: function setRowMajor(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n      this[0] = m00;\n      this[1] = m10;\n      this[2] = m20;\n      this[3] = m01;\n      this[4] = m11;\n      this[5] = m21;\n      this[6] = m02;\n      this[7] = m12;\n      this[8] = m22;\n      return this.check();\n    }\n  }, {\n    key: \"determinant\",\n    value: function determinant() {\n      return mat3.determinant(this);\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      return this.copy(IDENTITY);\n    }\n  }, {\n    key: \"fromQuaternion\",\n    value: function fromQuaternion(q) {\n      mat3.fromQuat(this, q);\n      return this.check();\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose() {\n      mat3.transpose(this, this);\n      return this.check();\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      mat3.invert(this, this);\n      return this.check();\n    }\n  }, {\n    key: \"multiplyLeft\",\n    value: function multiplyLeft(a) {\n      mat3.multiply(this, a, this);\n      return this.check();\n    }\n  }, {\n    key: \"multiplyRight\",\n    value: function multiplyRight(a) {\n      mat3.multiply(this, this, a);\n      return this.check();\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(radians) {\n      mat3.rotate(this, this, radians);\n      return this.check();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(factor) {\n      if (Array.isArray(factor)) {\n        mat3.scale(this, this, factor);\n      } else {\n        mat3.scale(this, this, [factor, factor, factor]);\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(vec) {\n      mat3.translate(this, this, vec);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(vector, result) {\n      switch (vector.length) {\n        case 2:\n          result = vec2.transformMat3(result || [-0, -0], vector, this);\n          break;\n\n        case 3:\n          result = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n          break;\n\n        case 4:\n          result = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n          break;\n\n        default:\n          throw new Error('Illegal vector');\n      }\n\n      checkVector(result, vector.length);\n      return result;\n    }\n  }, {\n    key: \"transformVector\",\n    value: function transformVector(vector, result) {\n      deprecated('Matrix3.transformVector');\n      return this.transform(vector, result);\n    }\n  }, {\n    key: \"transformVector2\",\n    value: function transformVector2(vector, result) {\n      deprecated('Matrix3.transformVector');\n      return this.transform(vector, result);\n    }\n  }, {\n    key: \"transformVector3\",\n    value: function transformVector3(vector, result) {\n      deprecated('Matrix3.transformVector');\n      return this.transform(vector, result);\n    }\n  }]);\n\n  return Matrix3;\n}(Matrix);\n\nexport { Matrix3 as default };","export default {\n  EPSILON1: 1e-1,\n  EPSILON2: 1e-2,\n  EPSILON3: 1e-3,\n  EPSILON4: 1e-4,\n  EPSILON5: 1e-5,\n  EPSILON6: 1e-6,\n  EPSILON7: 1e-7,\n  EPSILON8: 1e-8,\n  EPSILON9: 1e-9,\n  EPSILON10: 1e-10,\n  EPSILON11: 1e-11,\n  EPSILON12: 1e-12,\n  EPSILON13: 1e-13,\n  EPSILON14: 1e-14,\n  EPSILON15: 1e-15,\n  EPSILON16: 1e-16,\n  EPSILON17: 1e-17,\n  EPSILON18: 1e-18,\n  EPSILON19: 1e-19,\n  EPSILON20: 1e-20,\n  PI_OVER_TWO: Math.PI / 2,\n  PI_OVER_FOUR: Math.PI / 4,\n  PI_OVER_SIX: Math.PI / 6,\n  TWO_PI: Math.PI * 2\n};"],"sourceRoot":""}