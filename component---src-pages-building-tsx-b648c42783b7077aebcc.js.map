{"version":3,"sources":["webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/geo-layers/dist/esm/trips-layer/trips-layer.js","webpack:///./src/pages/building.tsx","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/layers/dist/esm/polygon-layer/polygon-layer.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/core/dist/esm/effects/lighting/point-light.js"],"names":["_PathLayer","TripsLayer","this","apply","arguments","key","value","shaders","prototype","call","inject","params","getAttributeManager","addInstanced","timestamps","size","accessor","shaderAttributes","instanceTimestamps","vertexOffset","instanceNextTimestamps","_this$props","props","trailLength","currentTime","uniforms","Object","assign","layerName","defaultProps","type","min","getTimestamps","ambientLight","AmbientLight","color","intensity","pointLight","PointLight","position","DEFAULT_THEME","buildingColor","trailColor0","trailColor1","material","ambient","diffuse","shininess","specularColor","effects","LightingEffect","landCover","DATA_URL","Building","_animate","time","Date","now","loopLength","layers","PolygonLayer","id","data","getPolygon","f","stroked","getFillColor","getPath","d","path","getColor","vendor","opacity","widthMinPixels","rounded","shadowEnabled","extruded","wireframe","polygon","getElevation","height","inited","deckLayer","setProps","DeckGLLayer","animation","map","addLayer","renderState","update","window","requestAnimationFrame","componentDidMount","componentWillUnmount","remove","Base","filled","elevationScale","_normalize","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","Number","MAX_SAFE_INTEGER","lineJointRounded","lineMiterLimit","getLineColor","getLineWidth","_CompositeLayer","state","paths","getLineDashArray","removed","_ref","_this","changeFlags","oldProps","geometryChanged","dataChanged","updateTriggersChanged","all","Array","isArray","slice","pathsDiff","dataRange","getIndex","p","__source","index","replace","_getPaths","setState","length","undefined","positionFormat","positionSize","startRow","endRow","_createIterable","iterable","objectInfo","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","object","_polygon","holeIndices","positions","i","push","getSubLayerRow","err","_this$props2","_dataDiff","transitions","_this$props3","lineDashJustified","_this$props4","updateTriggers","_this$state","FillLayer","getSubLayerClass","StrokeLayer","polygonLayer","shouldRenderSubLayer","getSubLayerProps","widthUnits","widthScale","widthMaxPixels","miterLimit","dashJustified","_pathType","getWidth","getSubLayerAccessor","getDashArray","x","DEFAULT_LIGHT_COLOR","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","_props$color","_props$intensity","_props$position","concat","attenuation","getAttenuation","projectedLight","layer","viewport","context","_layer$props","coordinateSystem","coordinateOrigin","fromCoordinateSystem","isGeospatial","LNGLAT","CARTESIAN","fromCoordinateOrigin"],"mappings":"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","file":"component---src-pages-building-tsx-b648c42783b7077aebcc.js","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { PathLayer } from '@deck.gl/layers';\nvar defaultProps = {\n  trailLength: {\n    type: 'number',\n    value: 120,\n    min: 0\n  },\n  currentTime: {\n    type: 'number',\n    value: 0,\n    min: 0\n  },\n  getTimestamps: {\n    type: 'accessor',\n    value: null\n  }\n};\n\nvar TripsLayer = function (_PathLayer) {\n  _inherits(TripsLayer, _PathLayer);\n\n  function TripsLayer() {\n    _classCallCheck(this, TripsLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TripsLayer).apply(this, arguments));\n  }\n\n  _createClass(TripsLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      var shaders = _get(_getPrototypeOf(TripsLayer.prototype), \"getShaders\", this).call(this);\n\n      shaders.inject = {\n        'vs:#decl': \"uniform float trailLength;\\nattribute float instanceTimestamps;\\nattribute float instanceNextTimestamps;\\nvarying float vTime;\\n\",\n        'vs:#main-end': \"vTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\\n\",\n        'fs:#decl': \"uniform float trailLength;\\nuniform float currentTime;\\nvarying float vTime;\\n\",\n        'fs:#main-start': \"if(vTime > currentTime || vTime < currentTime - trailLength) {\\n  discard;\\n}\\n\",\n        'fs:DECKGL_FILTER_COLOR': 'color.a *= 1.0 - (currentTime - vTime) / trailLength;'\n      };\n      return shaders;\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState(params) {\n      _get(_getPrototypeOf(TripsLayer.prototype), \"initializeState\", this).call(this, params);\n\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        timestamps: {\n          size: 1,\n          accessor: 'getTimestamps',\n          shaderAttributes: {\n            instanceTimestamps: {\n              vertexOffset: 0\n            },\n            instanceNextTimestamps: {\n              vertexOffset: 1\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(params) {\n      var _this$props = this.props,\n          trailLength = _this$props.trailLength,\n          currentTime = _this$props.currentTime;\n      params.uniforms = Object.assign({}, params.uniforms, {\n        trailLength: trailLength,\n        currentTime: currentTime\n      });\n\n      _get(_getPrototypeOf(TripsLayer.prototype), \"draw\", this).call(this, params);\n    }\n  }]);\n\n  return TripsLayer;\n}(PathLayer);\n\nexport { TripsLayer as default };\nTripsLayer.layerName = 'TripsLayer';\nTripsLayer.defaultProps = defaultProps;","import DeckGLLayer from 'maptalks.deckgl';\nimport Base from './base';\nimport { PolygonLayer } from '@deck.gl/layers';\nimport { TripsLayer } from '@deck.gl/geo-layers';\nimport { AmbientLight, PointLight, LightingEffect } from '@deck.gl/core';\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n\nconst pointLight = new PointLight({\n  color: [255, 255, 255],\n  intensity: 2.0,\n  position: [-74.05, 40.7, 8000]\n});\n\nconst lightingEffect = new LightingEffect({ ambientLight, pointLight });\n\nconst material = {\n  ambient: 0.1,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [60, 64, 70]\n};\n\nconst DEFAULT_THEME = {\n  buildingColor: [74, 80, 87],\n  trailColor0: [253, 128, 93],\n  trailColor1: [23, 184, 190],\n  material,\n  effects: [lightingEffect]\n};\n\nconst landCover = [[[-74.0, 40.7], [-74.02, 40.7], [-74.02, 40.72], [-74.0, 40.72]]];\n\nconst DATA_URL = {\n  BUILDINGS:\n    'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/trips/buildings.json', // eslint-disable-line\n  TRIPS: 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/trips/trips-v7.json' // eslint-disable-line\n};\n\ninterface IProps {\n\n}\n\nclass Building extends Base {\n  private inited: Boolean;\n  private deckLayer: DeckGLLayer | null;\n  constructor (props: IProps) {\n    super(props);\n    this.inited = false;\n    this.deckLayer = null;\n  }\n\n  componentDidMount () {\n    this._animate();\n  }\n\n  componentWillUnmount () {\n    // this.map.remove()\n    if (this.deckLayer) {\n      this.deckLayer.remove()\n    }\n    super.componentWillUnmount();\n  }\n\n  _animate = () => {\n    const [loopLength, animationSpeed] = [1800, 30];\n    const timestamp = Date.now() / 1000;\n    const loopTime = loopLength / animationSpeed;\n    const time = ((timestamp % loopTime) / loopTime) * loopLength;\n    const layers = [\n      new PolygonLayer({\n        id: 'ground',\n        data: landCover,\n        getPolygon: (f: any) => f,\n        stroked: false,\n        getFillColor: [0, 0, 0, 0]\n      }),\n      new TripsLayer({\n        id: 'trips',\n        data: DATA_URL.TRIPS,\n        currentTime: time,\n        getPath: (d: { path: any; }) => d.path,\n        getTimestamps: (d: { timestamps: any; }) => d.timestamps,\n        getColor: (d: { vendor: number; }) => (d.vendor === 0 ? DEFAULT_THEME.trailColor0 : DEFAULT_THEME.trailColor1),\n        opacity: 0.3,\n        widthMinPixels: 2,\n        rounded: true,\n        trailLength: 180,\n\n        shadowEnabled: false\n      }),\n      new PolygonLayer({\n        id: 'buildings',\n        data: DATA_URL.BUILDINGS,\n        extruded: true,\n        wireframe: false,\n        opacity: 0.5,\n        getPolygon: (f: { polygon: any; }) => f.polygon,\n        getElevation: (f: { height: any; }) => f.height,\n        getFillColor: DEFAULT_THEME.buildingColor,\n        material: DEFAULT_THEME.material\n        // lightSettings: {\n        //   lightsPosition: [-74.05, 40.7, 8000, -73.5, 41, 5000],\n        //   ambientRatio: 0.05,\n        //   diffuseRatio: 0.6,\n        //   specularRatio: 0.8,\n        //   lightsStrength: [2.0, 0.0, 0.0, 0.0],\n        //   numberOfLights: 2\n        // }\n      })\n    ];\n    const props = {\n      layers: layers\n    };\n    if (!this.inited) {\n      this.inited = true;\n      this.deckLayer = new DeckGLLayer('deck', props, {\n        animation: true,\n      });\n      this.map.addLayer(this.deckLayer);\n    } else if (this.deckLayer) {\n      this.deckLayer.setProps(props);\n    }\n    this.renderState?.update();\n    window.requestAnimationFrame(this._animate);\n  };\n}\n\nexport default Building;\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { CompositeLayer, createIterable, log } from '@deck.gl/core';\nimport SolidPolygonLayer from '../solid-polygon-layer/solid-polygon-layer';\nimport PathLayer from '../path-layer/path-layer';\nimport * as Polygon from '../solid-polygon-layer/polygon';\nimport { replaceInRange } from '../utils';\nvar defaultLineColor = [0, 0, 0, 255];\nvar defaultFillColor = [0, 0, 0, 255];\nvar defaultProps = {\n  stroked: true,\n  filled: true,\n  extruded: false,\n  elevationScale: 1,\n  wireframe: false,\n  _normalize: true,\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  lineJointRounded: false,\n  lineMiterLimit: 4,\n  getPolygon: {\n    type: 'accessor',\n    value: function value(f) {\n      return f.polygon;\n    }\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: defaultFillColor\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: defaultLineColor\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  material: true\n};\n\nvar PolygonLayer = function (_CompositeLayer) {\n  _inherits(PolygonLayer, _CompositeLayer);\n\n  function PolygonLayer() {\n    _classCallCheck(this, PolygonLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PolygonLayer).apply(this, arguments));\n  }\n\n  _createClass(PolygonLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      this.state = {\n        paths: []\n      };\n\n      if (this.props.getLineDashArray) {\n        log.removed('getLineDashArray', 'PathStyleExtension')();\n      }\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var _this = this;\n\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n      var geometryChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon);\n\n      if (geometryChanged && Array.isArray(changeFlags.dataChanged)) {\n        var paths = this.state.paths.slice();\n        var pathsDiff = changeFlags.dataChanged.map(function (dataRange) {\n          return replaceInRange({\n            data: paths,\n            getIndex: function getIndex(p) {\n              return p.__source.index;\n            },\n            dataRange: dataRange,\n            replace: _this._getPaths(dataRange)\n          });\n        });\n        this.setState({\n          paths: paths,\n          pathsDiff: pathsDiff\n        });\n      } else if (geometryChanged) {\n        this.setState({\n          paths: this._getPaths(),\n          pathsDiff: null\n        });\n      }\n    }\n  }, {\n    key: \"_getPaths\",\n    value: function _getPaths() {\n      var dataRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props = this.props,\n          data = _this$props.data,\n          getPolygon = _this$props.getPolygon,\n          positionFormat = _this$props.positionFormat,\n          _normalize = _this$props._normalize;\n      var paths = [];\n      var positionSize = positionFormat === 'XY' ? 2 : 3;\n      var startRow = dataRange.startRow,\n          endRow = dataRange.endRow;\n\n      var _createIterable = createIterable(data, startRow, endRow),\n          iterable = _createIterable.iterable,\n          objectInfo = _createIterable.objectInfo;\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n          objectInfo.index++;\n          var polygon = getPolygon(object, objectInfo);\n\n          if (_normalize) {\n            polygon = Polygon.normalize(polygon, positionSize);\n          }\n\n          var _polygon = polygon,\n              holeIndices = _polygon.holeIndices;\n          var positions = polygon.positions || polygon;\n\n          if (holeIndices) {\n            for (var i = 0; i <= holeIndices.length; i++) {\n              var path = positions.slice(holeIndices[i - 1] || 0, holeIndices[i] || positions.length);\n              paths.push(this.getSubLayerRow({\n                path: path\n              }, object, objectInfo.index));\n            }\n          } else {\n            paths.push(this.getSubLayerRow({\n              path: positions\n            }, object, objectInfo.index));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return paths;\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          _dataDiff = _this$props2._dataDiff,\n          stroked = _this$props2.stroked,\n          filled = _this$props2.filled,\n          extruded = _this$props2.extruded,\n          wireframe = _this$props2.wireframe,\n          _normalize = _this$props2._normalize,\n          elevationScale = _this$props2.elevationScale,\n          transitions = _this$props2.transitions,\n          positionFormat = _this$props2.positionFormat;\n      var _this$props3 = this.props,\n          lineWidthUnits = _this$props3.lineWidthUnits,\n          lineWidthScale = _this$props3.lineWidthScale,\n          lineWidthMinPixels = _this$props3.lineWidthMinPixels,\n          lineWidthMaxPixels = _this$props3.lineWidthMaxPixels,\n          lineJointRounded = _this$props3.lineJointRounded,\n          lineMiterLimit = _this$props3.lineMiterLimit,\n          lineDashJustified = _this$props3.lineDashJustified;\n      var _this$props4 = this.props,\n          getFillColor = _this$props4.getFillColor,\n          getLineColor = _this$props4.getLineColor,\n          getLineWidth = _this$props4.getLineWidth,\n          getLineDashArray = _this$props4.getLineDashArray,\n          getElevation = _this$props4.getElevation,\n          getPolygon = _this$props4.getPolygon,\n          updateTriggers = _this$props4.updateTriggers,\n          material = _this$props4.material;\n      var _this$state = this.state,\n          paths = _this$state.paths,\n          pathsDiff = _this$state.pathsDiff;\n      var FillLayer = this.getSubLayerClass('fill', SolidPolygonLayer);\n      var StrokeLayer = this.getSubLayerClass('stroke', PathLayer);\n      var polygonLayer = this.shouldRenderSubLayer('fill', paths) && new FillLayer({\n        _dataDiff: _dataDiff,\n        extruded: extruded,\n        elevationScale: elevationScale,\n        filled: filled,\n        wireframe: wireframe,\n        _normalize: _normalize,\n        getElevation: getElevation,\n        getFillColor: getFillColor,\n        getLineColor: getLineColor,\n        material: material,\n        transitions: transitions\n      }, this.getSubLayerProps({\n        id: 'fill',\n        updateTriggers: {\n          getPolygon: updateTriggers.getPolygon,\n          getElevation: updateTriggers.getElevation,\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor\n        }\n      }), {\n        data: data,\n        positionFormat: positionFormat,\n        getPolygon: getPolygon\n      });\n      var polygonLineLayer = !extruded && stroked && this.shouldRenderSubLayer('stroke', paths) && new StrokeLayer({\n        _dataDiff: pathsDiff && function () {\n          return pathsDiff;\n        },\n        widthUnits: lineWidthUnits,\n        widthScale: lineWidthScale,\n        widthMinPixels: lineWidthMinPixels,\n        widthMaxPixels: lineWidthMaxPixels,\n        rounded: lineJointRounded,\n        miterLimit: lineMiterLimit,\n        dashJustified: lineDashJustified,\n        _pathType: 'loop',\n        transitions: transitions && {\n          getWidth: transitions.getLineWidth,\n          getColor: transitions.getLineColor,\n          getPath: transitions.getPolygon\n        },\n        getColor: this.getSubLayerAccessor(getLineColor),\n        getWidth: this.getSubLayerAccessor(getLineWidth),\n        getDashArray: this.getSubLayerAccessor(getLineDashArray)\n      }, this.getSubLayerProps({\n        id: 'stroke',\n        updateTriggers: {\n          getWidth: updateTriggers.getLineWidth,\n          getColor: updateTriggers.getLineColor,\n          getDashArray: updateTriggers.getLineDashArray\n        }\n      }), {\n        data: paths,\n        positionFormat: positionFormat,\n        getPath: function getPath(x) {\n          return x.path;\n        }\n      });\n      return [!extruded && polygonLayer, polygonLineLayer, extruded && polygonLayer];\n    }\n  }]);\n\n  return PolygonLayer;\n}(CompositeLayer);\n\nexport { PolygonLayer as default };\nPolygonLayer.layerName = 'PolygonLayer';\nPolygonLayer.defaultProps = defaultProps;","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { projectPosition } from '../../shaderlib/project/project-functions';\nimport { COORDINATE_SYSTEM } from '../../lib';\nvar DEFAULT_LIGHT_COLOR = [255, 255, 255];\nvar DEFAULT_LIGHT_INTENSITY = 1.0;\nvar DEFAULT_ATTENUATION = [0, 0, 1];\nvar DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\nvar idCount = 0;\nexport var PointLight = function () {\n  function PointLight() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, PointLight);\n\n    var _props$color = props.color,\n        color = _props$color === void 0 ? DEFAULT_LIGHT_COLOR : _props$color;\n    var _props$intensity = props.intensity,\n        intensity = _props$intensity === void 0 ? DEFAULT_LIGHT_INTENSITY : _props$intensity;\n    var _props$position = props.position,\n        position = _props$position === void 0 ? DEFAULT_LIGHT_POSITION : _props$position;\n    this.id = props.id || \"point-\".concat(idCount++);\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = Object.assign({}, this);\n  }\n\n  _createClass(PointLight, [{\n    key: \"getProjectedLight\",\n    value: function getProjectedLight(_ref) {\n      var layer = _ref.layer;\n      var projectedLight = this.projectedLight;\n      var viewport = layer.context.viewport;\n      var _layer$props = layer.props,\n          coordinateSystem = _layer$props.coordinateSystem,\n          coordinateOrigin = _layer$props.coordinateOrigin;\n      var position = projectPosition(this.position, {\n        viewport: viewport,\n        coordinateSystem: coordinateSystem,\n        coordinateOrigin: coordinateOrigin,\n        fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN,\n        fromCoordinateOrigin: [0, 0, 0]\n      });\n      projectedLight.color = this.color;\n      projectedLight.intensity = this.intensity;\n      projectedLight.position = position;\n      return projectedLight;\n    }\n  }]);\n\n  return PointLight;\n}();\n\nfunction getAttenuation(props) {\n  if ('attenuation' in props) {\n    return props.attenuation;\n  }\n\n  if ('intensity' in props) {\n    return [0, 0, props.intensity];\n  }\n\n  return DEFAULT_ATTENUATION;\n}"],"sourceRoot":""}