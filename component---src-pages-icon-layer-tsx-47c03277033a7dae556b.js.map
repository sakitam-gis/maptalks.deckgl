{"version":3,"sources":["webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/core-js/internals/native-symbol.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/core-js/internals/native-promise-constructor.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/core-js/modules/es.promise.finally.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js","webpack:///./src/pages/icon-layer.tsx","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/core-js/internals/species-constructor.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/core-js/internals/use-symbol-as-uid.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/core-js/internals/well-known-symbol.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/core-js/internals/a-function.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/core-js/internals/new-promise-capability.js","webpack:////Users/sakitam-fdd/Documents/workspace/github/maptalks.deckgl/node_modules/core-js/internals/promise-resolve.js"],"names":["fails","module","exports","Object","getOwnPropertySymbols","String","Symbol","global","Promise","$","IS_PURE","NativePromise","getBuiltIn","speciesConstructor","promiseResolve","redefine","target","proto","real","forced","prototype","call","then","onFinally","C","this","isFunction","x","e","_DEFAULT_TEXTURE_PARA","noop","DEFAULT_TEXTURE_PARAMETERS","getIconId","icon","id","url","buildRowMapping","mapping","columns","yOffset","i","length","_columns$i","xOffset","assign","y","IconManager","gl","_ref2","_ref2$onUpdate","onUpdate","_loadOptions","_getIcon","_texture","_externalTexture","_mapping","_pendingCount","_autoPacking","_xOffset","_yOffset","_rowHeight","_buffer","_canvasWidth","_canvasHeight","_canvas","key","value","_ref3","loadOptions","autoPacking","iconAtlas","iconMapping","data","getIcon","undefined","_updateIconAtlas","document","createElement","_updateAutoPacking","setParameters","parameters","texture","width","height","oldWidth","oldHeight","newTexture","icons","values","cachedIcons","_createIterable","iterable","objectInfo","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","object","index","Error","err","getDiffIcons","_buildMapping","_ref","number","buffer","_ref$mapping","_ref$xOffset","_ref$yOffset","_ref$rowHeight","rowHeight","canvasWidth","push","Math","max","canvasHeight","pow","ceil","log2","buildMapping","targetY","_loadIcons","_this","ctx","getContext","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","load","imageData","_this$_mapping$id","canvas","clearRect","drawImage","resizeImage","setSubImageData","generateMipmap","error","log","_iterator2","get","DEFAULT_COLOR","defaultProps","type","async","sizeScale","min","billboard","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","alphaCutoff","getPosition","position","getColor","getSize","getAngle","getPixelOffset","_Layer","IconLayer","apply","arguments","vs","fs","modules","project32","picking","state","iconManager","context","_onUpdate","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","transition","accessor","instanceSizes","defaultValue","instanceOffsets","transform","getInstanceOffset","instanceIconFrames","getInstanceIconFrame","instanceColorModes","getInstanceColorMode","instanceColors","props","colorFormat","normalized","instanceAngles","instancePixelOffset","oldProps","changeFlags","attributeManager","setProps","iconMappingChanged","internalState","isAsyncPropLoading","dataChanged","updateTriggersChanged","all","invalidate","extensionsChanged","model","setState","_getModel","invalidateAll","finalize","uniforms","_this$props","viewport","iconsTexture","getTexture","loaded","setUniforms","iconsTextureDim","metersPerPixel","draw","getShaders","geometry","drawMode","attributes","positions","Float32Array","isInstanced","setNeedsRedraw","rect","getIconMapping","anchorX","anchorY","mask","isLoaded","layerName","Icon","onHover","hoveredObject","deckLayer","viewState","center","zoom","pitch","bearing","initMap","_renderLayers","componentWillUnmount","remove","renderTooltip","className","style","top","left","name","year","layers","pickable","wrapLongitude","d","coordinates","DeckGLLayer","animation","forceRenderOnMoving","forceRenderOnZooming","renderStart","map","addLayer","Base","anObject","aFunction","SPECIES","wellKnownSymbol","O","defaultConstructor","S","constructor","NATIVE_SYMBOL","sham","shared","has","uid","USE_SYMBOL_AS_UID","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","it","TypeError","PromiseCapability","resolve","reject","promise","$$resolve","$$reject","f","isObject","newPromiseCapability","promiseCapability"],"mappings":"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","file":"component---src-pages-icon-layer-tsx-47c03277033a7dae556b.js","sourcesContent":["var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// patch native Promise.prototype for native async functions\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}\n","import \"core-js/modules/es.promise.finally\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _DEFAULT_TEXTURE_PARA;\n\nimport { Texture2D, copyToTexture, cloneTextureFrom } from '@luma.gl/core';\nimport { ImageLoader } from '@loaders.gl/images';\nimport { load } from '@loaders.gl/core';\nimport { createIterable, log } from '@deck.gl/core';\nvar DEFAULT_CANVAS_WIDTH = 1024;\nvar DEFAULT_BUFFER = 4;\n\nvar noop = function noop() {};\n\nvar DEFAULT_TEXTURE_PARAMETERS = (_DEFAULT_TEXTURE_PARA = {}, _defineProperty(_DEFAULT_TEXTURE_PARA, 10241, 9987), _defineProperty(_DEFAULT_TEXTURE_PARA, 10240, 9729), _defineProperty(_DEFAULT_TEXTURE_PARA, 10242, 33071), _defineProperty(_DEFAULT_TEXTURE_PARA, 10243, 33071), _DEFAULT_TEXTURE_PARA);\n\nfunction nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n\nfunction resizeImage(ctx, imageData, width, height) {\n  if (width === imageData.width && height === imageData.height) {\n    return imageData;\n  }\n\n  ctx.canvas.height = height;\n  ctx.canvas.width = width;\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.drawImage(imageData, 0, 0, imageData.width, imageData.height, 0, 0, width, height);\n  return ctx.canvas;\n}\n\nfunction getIconId(icon) {\n  return icon && (icon.id || icon.url);\n}\n\nfunction resizeTexture(gl, texture, width, height) {\n  var oldWidth = texture.width;\n  var oldHeight = texture.height;\n  var newTexture = cloneTextureFrom(texture, {\n    width: width,\n    height: height\n  });\n  copyToTexture(texture, newTexture, {\n    targetY: 0,\n    width: oldWidth,\n    height: oldHeight\n  });\n  texture[\"delete\"]();\n  return newTexture;\n}\n\nfunction buildRowMapping(mapping, columns, yOffset) {\n  for (var i = 0; i < columns.length; i++) {\n    var _columns$i = columns[i],\n        icon = _columns$i.icon,\n        xOffset = _columns$i.xOffset;\n    var id = getIconId(icon);\n    mapping[id] = Object.assign({}, icon, {\n      x: xOffset,\n      y: yOffset\n    });\n  }\n}\n\nexport function buildMapping(_ref) {\n  var icons = _ref.icons,\n      buffer = _ref.buffer,\n      _ref$mapping = _ref.mapping,\n      mapping = _ref$mapping === void 0 ? {} : _ref$mapping,\n      _ref$xOffset = _ref.xOffset,\n      xOffset = _ref$xOffset === void 0 ? 0 : _ref$xOffset,\n      _ref$yOffset = _ref.yOffset,\n      yOffset = _ref$yOffset === void 0 ? 0 : _ref$yOffset,\n      _ref$rowHeight = _ref.rowHeight,\n      rowHeight = _ref$rowHeight === void 0 ? 0 : _ref$rowHeight,\n      canvasWidth = _ref.canvasWidth;\n  var columns = [];\n\n  for (var i = 0; i < icons.length; i++) {\n    var icon = icons[i];\n    var id = getIconId(icon);\n\n    if (!mapping[id]) {\n      var height = icon.height,\n          width = icon.width;\n\n      if (xOffset + width + buffer > canvasWidth) {\n        buildRowMapping(mapping, columns, yOffset);\n        xOffset = 0;\n        yOffset = rowHeight + yOffset + buffer;\n        rowHeight = 0;\n        columns = [];\n      }\n\n      columns.push({\n        icon: icon,\n        xOffset: xOffset\n      });\n      xOffset = xOffset + width + buffer;\n      rowHeight = Math.max(rowHeight, height);\n    }\n  }\n\n  if (columns.length > 0) {\n    buildRowMapping(mapping, columns, yOffset);\n  }\n\n  return {\n    mapping: mapping,\n    rowHeight: rowHeight,\n    xOffset: xOffset,\n    yOffset: yOffset,\n    canvasWidth: canvasWidth,\n    canvasHeight: nextPowOfTwo(rowHeight + yOffset + buffer)\n  };\n}\nexport function getDiffIcons(data, getIcon, cachedIcons) {\n  if (!data || !getIcon) {\n    return null;\n  }\n\n  cachedIcons = cachedIcons || {};\n  var icons = {};\n\n  var _createIterable = createIterable(data),\n      iterable = _createIterable.iterable,\n      objectInfo = _createIterable.objectInfo;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var object = _step.value;\n      objectInfo.index++;\n      var icon = getIcon(object, objectInfo);\n      var id = getIconId(icon);\n\n      if (!icon) {\n        throw new Error('Icon is missing.');\n      }\n\n      if (!icon.url) {\n        throw new Error('Icon url is missing.');\n      }\n\n      if (!icons[id] && (!cachedIcons[id] || icon.url !== cachedIcons[id].url)) {\n        icons[id] = icon;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return icons;\n}\n\nvar IconManager = function () {\n  function IconManager(gl, _ref2) {\n    var _ref2$onUpdate = _ref2.onUpdate,\n        onUpdate = _ref2$onUpdate === void 0 ? noop : _ref2$onUpdate;\n\n    _classCallCheck(this, IconManager);\n\n    this.gl = gl;\n    this.onUpdate = onUpdate;\n    this._loadOptions = null;\n    this._getIcon = null;\n    this._texture = null;\n    this._externalTexture = null;\n    this._mapping = {};\n    this._pendingCount = 0;\n    this._autoPacking = false;\n    this._xOffset = 0;\n    this._yOffset = 0;\n    this._rowHeight = 0;\n    this._buffer = DEFAULT_BUFFER;\n    this._canvasWidth = DEFAULT_CANVAS_WIDTH;\n    this._canvasHeight = 0;\n    this._canvas = null;\n  }\n\n  _createClass(IconManager, [{\n    key: \"finalize\",\n    value: function finalize() {\n      if (this._texture) {\n        this._texture[\"delete\"]();\n      }\n    }\n  }, {\n    key: \"getTexture\",\n    value: function getTexture() {\n      return this._texture || this._externalTexture;\n    }\n  }, {\n    key: \"getIconMapping\",\n    value: function getIconMapping(icon) {\n      var id = this._autoPacking ? getIconId(icon) : icon;\n      return this._mapping[id] || {};\n    }\n  }, {\n    key: \"setProps\",\n    value: function setProps(_ref3) {\n      var loadOptions = _ref3.loadOptions,\n          autoPacking = _ref3.autoPacking,\n          iconAtlas = _ref3.iconAtlas,\n          iconMapping = _ref3.iconMapping,\n          data = _ref3.data,\n          getIcon = _ref3.getIcon;\n\n      if (loadOptions) {\n        this._loadOptions = loadOptions;\n      }\n\n      if (autoPacking !== undefined) {\n        this._autoPacking = autoPacking;\n      }\n\n      if (getIcon) {\n        this._getIcon = getIcon;\n      }\n\n      if (iconMapping) {\n        this._mapping = iconMapping;\n      }\n\n      if (iconAtlas) {\n        this._updateIconAtlas(iconAtlas);\n      }\n\n      if (this._autoPacking && (data || getIcon) && typeof document !== 'undefined') {\n        this._canvas = this._canvas || document.createElement('canvas');\n\n        this._updateAutoPacking(data);\n      }\n    }\n  }, {\n    key: \"_updateIconAtlas\",\n    value: function _updateIconAtlas(iconAtlas) {\n      if (this._texture) {\n        this._texture[\"delete\"]();\n\n        this._texture = null;\n      }\n\n      if (iconAtlas instanceof Texture2D) {\n        iconAtlas.setParameters(DEFAULT_TEXTURE_PARAMETERS);\n        this._externalTexture = iconAtlas;\n        this.onUpdate();\n      } else if (iconAtlas) {\n        this._texture = new Texture2D(this.gl, {\n          data: iconAtlas,\n          parameters: DEFAULT_TEXTURE_PARAMETERS\n        });\n        this.onUpdate();\n      }\n    }\n  }, {\n    key: \"_updateAutoPacking\",\n    value: function _updateAutoPacking(data) {\n      var icons = Object.values(getDiffIcons(data, this._getIcon, this._mapping) || {});\n\n      if (icons.length > 0) {\n        var _buildMapping = buildMapping({\n          icons: icons,\n          buffer: this._buffer,\n          canvasWidth: this._canvasWidth,\n          mapping: this._mapping,\n          rowHeight: this._rowHeight,\n          xOffset: this._xOffset,\n          yOffset: this._yOffset\n        }),\n            mapping = _buildMapping.mapping,\n            xOffset = _buildMapping.xOffset,\n            yOffset = _buildMapping.yOffset,\n            rowHeight = _buildMapping.rowHeight,\n            canvasHeight = _buildMapping.canvasHeight;\n\n        this._rowHeight = rowHeight;\n        this._mapping = mapping;\n        this._xOffset = xOffset;\n        this._yOffset = yOffset;\n        this._canvasHeight = canvasHeight;\n\n        if (!this._texture) {\n          this._texture = new Texture2D(this.gl, {\n            width: this._canvasWidth,\n            height: this._canvasHeight,\n            parameters: DEFAULT_TEXTURE_PARAMETERS\n          });\n        }\n\n        if (this._texture.height !== this._canvasHeight) {\n          this._texture = resizeTexture(this.gl, this._texture, this._canvasWidth, this._canvasHeight);\n        }\n\n        this.onUpdate();\n\n        this._loadIcons(icons);\n      }\n    }\n  }, {\n    key: \"_loadIcons\",\n    value: function _loadIcons(icons) {\n      var _this = this;\n\n      var ctx = this._canvas.getContext('2d');\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var icon = _step2.value;\n          _this._pendingCount++;\n          load(icon.url, ImageLoader, _this._loadOptions).then(function (imageData) {\n            var id = getIconId(icon);\n            var _this$_mapping$id = _this._mapping[id],\n                x = _this$_mapping$id.x,\n                y = _this$_mapping$id.y,\n                width = _this$_mapping$id.width,\n                height = _this$_mapping$id.height;\n            var data = resizeImage(ctx, imageData, width, height);\n\n            _this._texture.setSubImageData({\n              data: data,\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n\n            _this._texture.generateMipmap();\n\n            _this.onUpdate();\n          })[\"catch\"](function (error) {\n            log.error(error)();\n          })[\"finally\"](function () {\n            _this._pendingCount--;\n          });\n        };\n\n        for (var _iterator2 = icons[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return this._pendingCount === 0;\n    }\n  }]);\n\n  return IconManager;\n}();\n\nexport { IconManager as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { Layer, project32, picking } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './icon-layer-vertex.glsl';\nimport fs from './icon-layer-fragment.glsl';\nimport IconManager from './icon-manager';\nvar DEFAULT_COLOR = [0, 0, 0, 255];\nvar defaultProps = {\n  iconAtlas: {\n    type: 'object',\n    value: null,\n    async: true\n  },\n  iconMapping: {\n    type: 'object',\n    value: {},\n    async: true\n  },\n  sizeScale: {\n    type: 'number',\n    value: 1,\n    min: 0\n  },\n  billboard: true,\n  sizeUnits: 'pixels',\n  sizeMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  sizeMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  alphaCutoff: {\n    type: 'number',\n    value: 0.05,\n    min: 0,\n    max: 1\n  },\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  getIcon: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.icon;\n    }\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  }\n};\n\nvar IconLayer = function (_Layer) {\n  _inherits(IconLayer, _Layer);\n\n  function IconLayer() {\n    _classCallCheck(this, IconLayer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IconLayer).apply(this, arguments));\n  }\n\n  _createClass(IconLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      return _get(_getPrototypeOf(IconLayer.prototype), \"getShaders\", this).call(this, {\n        vs: vs,\n        fs: fs,\n        modules: [project32, picking]\n      });\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var _this = this;\n\n      this.state = {\n        iconManager: new IconManager(this.context.gl, {\n          onUpdate: function onUpdate() {\n            return _this._onUpdate();\n          }\n        })\n      };\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        instancePositions: {\n          size: 3,\n          type: 5130,\n          fp64: this.use64bitPositions(),\n          transition: true,\n          accessor: 'getPosition'\n        },\n        instanceSizes: {\n          size: 1,\n          transition: true,\n          accessor: 'getSize',\n          defaultValue: 1\n        },\n        instanceOffsets: {\n          size: 2,\n          accessor: 'getIcon',\n          transform: this.getInstanceOffset\n        },\n        instanceIconFrames: {\n          size: 4,\n          accessor: 'getIcon',\n          transform: this.getInstanceIconFrame\n        },\n        instanceColorModes: {\n          size: 1,\n          type: 5121,\n          accessor: 'getIcon',\n          transform: this.getInstanceColorMode\n        },\n        instanceColors: {\n          size: this.props.colorFormat.length,\n          type: 5121,\n          normalized: true,\n          transition: true,\n          accessor: 'getColor',\n          defaultValue: DEFAULT_COLOR\n        },\n        instanceAngles: {\n          size: 1,\n          transition: true,\n          accessor: 'getAngle'\n        },\n        instancePixelOffset: {\n          size: 2,\n          transition: true,\n          accessor: 'getPixelOffset'\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n\n      _get(_getPrototypeOf(IconLayer.prototype), \"updateState\", this).call(this, {\n        props: props,\n        oldProps: oldProps,\n        changeFlags: changeFlags\n      });\n\n      var attributeManager = this.getAttributeManager();\n      var iconAtlas = props.iconAtlas,\n          iconMapping = props.iconMapping,\n          data = props.data,\n          getIcon = props.getIcon;\n      var iconManager = this.state.iconManager;\n      iconManager.setProps({\n        loadOptions: props.loadOptions\n      });\n      var iconMappingChanged = false;\n      var prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas');\n\n      if (prePacked) {\n        if (oldProps.iconAtlas !== props.iconAtlas) {\n          iconManager.setProps({\n            iconAtlas: iconAtlas,\n            autoPacking: false\n          });\n        }\n\n        if (oldProps.iconMapping !== props.iconMapping) {\n          iconManager.setProps({\n            iconMapping: iconMapping\n          });\n          iconMappingChanged = true;\n        }\n      } else {\n        iconManager.setProps({\n          autoPacking: true\n        });\n      }\n\n      if (changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon)) {\n        iconManager.setProps({\n          data: data,\n          getIcon: getIcon\n        });\n        iconMappingChanged = true;\n      }\n\n      if (iconMappingChanged) {\n        attributeManager.invalidate('instanceOffsets');\n        attributeManager.invalidate('instanceIconFrames');\n        attributeManager.invalidate('instanceColorModes');\n      }\n\n      if (changeFlags.extensionsChanged) {\n        var gl = this.context.gl;\n\n        if (this.state.model) {\n          this.state.model[\"delete\"]();\n        }\n\n        this.setState({\n          model: this._getModel(gl)\n        });\n        attributeManager.invalidateAll();\n      }\n    }\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState() {\n      _get(_getPrototypeOf(IconLayer.prototype), \"finalizeState\", this).call(this);\n\n      this.state.iconManager.finalize();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n      var _this$props = this.props,\n          sizeScale = _this$props.sizeScale,\n          sizeMinPixels = _this$props.sizeMinPixels,\n          sizeMaxPixels = _this$props.sizeMaxPixels,\n          sizeUnits = _this$props.sizeUnits,\n          billboard = _this$props.billboard,\n          alphaCutoff = _this$props.alphaCutoff;\n      var iconManager = this.state.iconManager;\n      var viewport = this.context.viewport;\n      var iconsTexture = iconManager.getTexture();\n\n      if (iconsTexture && iconsTexture.loaded) {\n        this.state.model.setUniforms(Object.assign({}, uniforms, {\n          iconsTexture: iconsTexture,\n          iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n          sizeScale: sizeScale * (sizeUnits === 'pixels' ? viewport.metersPerPixel : 1),\n          sizeMinPixels: sizeMinPixels,\n          sizeMaxPixels: sizeMaxPixels,\n          billboard: billboard,\n          alphaCutoff: alphaCutoff\n        })).draw();\n      }\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(gl) {\n      var positions = [-1, -1, -1, 1, 1, 1, 1, -1];\n      return new Model(gl, Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: 6,\n          attributes: {\n            positions: {\n              size: 2,\n              value: new Float32Array(positions)\n            }\n          }\n        }),\n        isInstanced: true\n      }));\n    }\n  }, {\n    key: \"_onUpdate\",\n    value: function _onUpdate() {\n      this.setNeedsRedraw();\n    }\n  }, {\n    key: \"getInstanceOffset\",\n    value: function getInstanceOffset(icon) {\n      var rect = this.state.iconManager.getIconMapping(icon);\n      return [rect.width / 2 - rect.anchorX || 0, rect.height / 2 - rect.anchorY || 0];\n    }\n  }, {\n    key: \"getInstanceColorMode\",\n    value: function getInstanceColorMode(icon) {\n      var mapping = this.state.iconManager.getIconMapping(icon);\n      return mapping.mask ? 1 : 0;\n    }\n  }, {\n    key: \"getInstanceIconFrame\",\n    value: function getInstanceIconFrame(icon) {\n      var rect = this.state.iconManager.getIconMapping(icon);\n      return [rect.x || 0, rect.y || 0, rect.width || 0, rect.height || 0];\n    }\n  }, {\n    key: \"isLoaded\",\n    get: function get() {\n      return _get(_getPrototypeOf(IconLayer.prototype), \"isLoaded\", this) && this.state.iconManager.isLoaded;\n    }\n  }]);\n\n  return IconLayer;\n}(Layer);\n\nexport { IconLayer as default };\nIconLayer.layerName = 'IconLayer';\nIconLayer.defaultProps = defaultProps;","export default \"#define SHADER_NAME icon-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceSizes;\\nattribute float instanceAngles;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\nattribute vec4 instanceIconFrames;\\nattribute float instanceColorModes;\\nattribute vec2 instanceOffsets;\\nattribute vec2 instancePixelOffset;\\n\\nuniform float sizeScale;\\nuniform vec2 iconsTextureDim;\\nuniform float sizeMinPixels;\\nuniform float sizeMaxPixels;\\nuniform bool billboard;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvec2 rotate_by_angle(vec2 vertex, float angle) {\\n  float angle_radian = angle * PI / 180.0;\\n  float cos_angle = cos(angle_radian);\\n  float sin_angle = sin(angle_radian);\\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\\n  return rotationMatrix * vertex;\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  geometry.uv = positions;\\n  geometry.pickingColor = instancePickingColors;\\n  uv = positions;\\n\\n  vec2 iconSize = instanceIconFrames.zw;\\n  float sizePixels = clamp(\\n    project_size_to_pixel(instanceSizes * sizeScale), \\n    sizeMinPixels, sizeMaxPixels\\n  );\\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\\n  pixelOffset += instancePixelOffset;\\n  pixelOffset.y *= -1.0;\\n\\n  if (billboard)  {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = vec3(pixelOffset, 0.0);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n\\n  } else {\\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\\n    DECKGL_FILTER_SIZE(offset_common, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \\n  }\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  vTextureCoords = mix(\\n    instanceIconFrames.xy,\\n    instanceIconFrames.xy + iconSize,\\n    (positions.xy + 1.0) / 2.0\\n  ) / iconsTextureDim;\\n\\n  vColor = instanceColors;\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n\\n  vColorMode = instanceColorModes;\\n}\\n\";","export default \"#define SHADER_NAME icon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float opacity;\\nuniform sampler2D iconsTexture;\\nuniform float alphaCutoff;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\\n  float a = texColor.a * opacity * vColor.a;\\n\\n  if (a < alphaCutoff) {\\n    discard;\\n  }\\n\\n  gl_FragColor = vec4(color, a);\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";","import DeckGLLayer from 'maptalks.deckgl';\nimport { IconLayer } from '@deck.gl/layers';\nimport Base from \"./base\";\nimport React from \"react\";\n\nconst DATA_URL =\n  'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/icon/meteorites.json'; // eslint-disable-line\ninterface IProps {\n\n}\n\ninterface IState {\n  data: any;\n  x?: number;\n  y?: number;\n  hoveredObject?: any;\n}\n\nclass Icon extends Base {\n  private deckLayer: DeckGLLayer | null;\n\n  state: IState = {\n    data: [],\n  }\n\n  constructor (props: IProps) {\n    super(props);\n    this.deckLayer = null;\n\n    this.viewState = {\n      center: [-35, 36.7],\n      zoom: 2.8,\n      pitch: 40.5,\n      bearing: -27,\n    };\n  }\n\n  initMap() {\n    super.initMap();\n    this._renderLayers();\n  }\n\n  componentWillUnmount () {\n    // this.map.remove()\n    if (this.deckLayer) {\n      // @ts-ignore\n      this.deckLayer.remove()\n    }\n    super.componentWillUnmount();\n  }\n\n  onHover = ({ x, y, object }: any) => {\n    this.setState({ x, y, hoveredObject: object });\n  }\n\n  renderTooltip () {\n    const { x, y, hoveredObject } = this.state;\n    return (\n      hoveredObject && (\n        <div className=\"tooltip\" style={{ top: y, left: x }}>\n          {hoveredObject.name} {hoveredObject.year ? `(${hoveredObject.year})` : ''}\n        </div>\n      )\n    );\n  }\n\n  _renderLayers () {\n    const props = {\n      layers: [\n        new IconLayer({\n          id: 'icon',\n          getIcon: () => 'marker',\n          sizeUnits: 'meters',\n          sizeScale: 5000,\n          sizeMinPixels: 6,\n          data: DATA_URL,\n          pickable: true,\n          wrapLongitude: true,\n          getPosition: (d: { coordinates: any; }) => d.coordinates,\n          iconAtlas: './images/location-icon-atlas.png',\n          iconMapping: './json/location-icon-mapping.json',\n          onHover: this.onHover,\n        })\n      ],\n    }\n    if (!this.deckLayer) {\n      this.deckLayer = new DeckGLLayer('deck', props, {\n        animation: true,\n        forceRenderOnMoving: true,\n        forceRenderOnZooming: true,\n        renderStart: () => {\n          // this.renderState?.update();\n        },\n      });\n\n      this.map.addLayer(this.deckLayer);\n    } else {\n      this.deckLayer.setProps(props);\n    }\n  }\n}\n\nexport default Icon;\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n"],"sourceRoot":""}